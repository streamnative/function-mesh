/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.streamnative.cloud.models.source;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * A node selector term, associated with the corresponding weight.
 */
@ApiModel(description = "A node selector term, associated with the corresponding weight.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-02T12:09:25.926Z[Etc/UTC]")
public class V1alpha1SourceSpecPodAffinityNodeAffinityPreference {
    public static final String SERIALIZED_NAME_MATCH_EXPRESSIONS = "matchExpressions";
    @SerializedName(SERIALIZED_NAME_MATCH_EXPRESSIONS)
    private List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> matchExpressions = null;

    public static final String SERIALIZED_NAME_MATCH_FIELDS = "matchFields";
    @SerializedName(SERIALIZED_NAME_MATCH_FIELDS)
    private List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> matchFields = null;


    public V1alpha1SourceSpecPodAffinityNodeAffinityPreference matchExpressions(List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> matchExpressions) {

        this.matchExpressions = matchExpressions;
        return this;
    }

    public V1alpha1SourceSpecPodAffinityNodeAffinityPreference addMatchExpressionsItem(V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions matchExpressionsItem) {
        if (this.matchExpressions == null) {
            this.matchExpressions = new ArrayList<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions>();
        }
        this.matchExpressions.add(matchExpressionsItem);
        return this;
    }

    /**
     * A list of node selector requirements by node&#39;s labels.
     * @return matchExpressions
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A list of node selector requirements by node's labels.")

    public List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> getMatchExpressions() {
        return matchExpressions;
    }


    public void setMatchExpressions(List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> matchExpressions) {
        this.matchExpressions = matchExpressions;
    }


    public V1alpha1SourceSpecPodAffinityNodeAffinityPreference matchFields(List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> matchFields) {

        this.matchFields = matchFields;
        return this;
    }

    public V1alpha1SourceSpecPodAffinityNodeAffinityPreference addMatchFieldsItem(V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions matchFieldsItem) {
        if (this.matchFields == null) {
            this.matchFields = new ArrayList<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions>();
        }
        this.matchFields.add(matchFieldsItem);
        return this;
    }

    /**
     * A list of node selector requirements by node&#39;s fields.
     * @return matchFields
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "A list of node selector requirements by node's fields.")

    public List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> getMatchFields() {
        return matchFields;
    }


    public void setMatchFields(List<V1alpha1SourceSpecPodAffinityNodeAffinityPreferenceMatchExpressions> matchFields) {
        this.matchFields = matchFields;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1alpha1SourceSpecPodAffinityNodeAffinityPreference v1alpha1SourceSpecPodAffinityNodeAffinityPreference = (V1alpha1SourceSpecPodAffinityNodeAffinityPreference) o;
        return Objects.equals(this.matchExpressions, v1alpha1SourceSpecPodAffinityNodeAffinityPreference.matchExpressions) &&
                Objects.equals(this.matchFields, v1alpha1SourceSpecPodAffinityNodeAffinityPreference.matchFields);
    }

    @Override
    public int hashCode() {
        return Objects.hash(matchExpressions, matchFields);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1alpha1SourceSpecPodAffinityNodeAffinityPreference {\n");
        sb.append("    matchExpressions: ").append(toIndentedString(matchExpressions)).append("\n");
        sb.append("    matchFields: ").append(toIndentedString(matchFields)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

