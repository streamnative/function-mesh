/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.streamnative.cloud.models.source;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * information about the configMap data to project
 */
@ApiModel(description = "information about the configMap data to project")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-02T12:09:25.926Z[Etc/UTC]")
public class V1alpha1SourceSpecPodProjectedConfigMap {
    public static final String SERIALIZED_NAME_ITEMS = "items";
    @SerializedName(SERIALIZED_NAME_ITEMS)
    private List<V1alpha1SourceSpecPodConfigMapItems> items = null;

    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    private String name;

    public static final String SERIALIZED_NAME_OPTIONAL = "optional";
    @SerializedName(SERIALIZED_NAME_OPTIONAL)
    private Boolean optional;


    public V1alpha1SourceSpecPodProjectedConfigMap items(List<V1alpha1SourceSpecPodConfigMapItems> items) {

        this.items = items;
        return this;
    }

    public V1alpha1SourceSpecPodProjectedConfigMap addItemsItem(V1alpha1SourceSpecPodConfigMapItems itemsItem) {
        if (this.items == null) {
            this.items = new ArrayList<V1alpha1SourceSpecPodConfigMapItems>();
        }
        this.items.add(itemsItem);
        return this;
    }

    /**
     * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the &#39;..&#39; path or start with &#39;..&#39;.
     * @return items
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.")

    public List<V1alpha1SourceSpecPodConfigMapItems> getItems() {
        return items;
    }


    public void setItems(List<V1alpha1SourceSpecPodConfigMapItems> items) {
        this.items = items;
    }


    public V1alpha1SourceSpecPodProjectedConfigMap name(String name) {

        this.name = name;
        return this;
    }

    /**
     * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?")

    public String getName() {
        return name;
    }


    public void setName(String name) {
        this.name = name;
    }


    public V1alpha1SourceSpecPodProjectedConfigMap optional(Boolean optional) {

        this.optional = optional;
        return this;
    }

    /**
     * Specify whether the ConfigMap or its keys must be defined
     * @return optional
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Specify whether the ConfigMap or its keys must be defined")

    public Boolean getOptional() {
        return optional;
    }


    public void setOptional(Boolean optional) {
        this.optional = optional;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1alpha1SourceSpecPodProjectedConfigMap v1alpha1SourceSpecPodProjectedConfigMap = (V1alpha1SourceSpecPodProjectedConfigMap) o;
        return Objects.equals(this.items, v1alpha1SourceSpecPodProjectedConfigMap.items) &&
                Objects.equals(this.name, v1alpha1SourceSpecPodProjectedConfigMap.name) &&
                Objects.equals(this.optional, v1alpha1SourceSpecPodProjectedConfigMap.optional);
    }

    @Override
    public int hashCode() {
        return Objects.hash(items, name, optional);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1alpha1SourceSpecPodProjectedConfigMap {\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    optional: ").append(toIndentedString(optional)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

