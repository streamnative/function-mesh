/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.streamnative.cloud.models.source;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 * V1alpha1SourceSpecPod
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-02T12:09:25.926Z[Etc/UTC]")
public class V1alpha1SourceSpecPod {
    public static final String SERIALIZED_NAME_AFFINITY = "affinity";
    @SerializedName(SERIALIZED_NAME_AFFINITY)
    private V1alpha1SourceSpecPodAffinity affinity;

    public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
    @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
    private Map<String, String> annotations = null;

    public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
    @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
    private List<V1alpha1SourceSpecPodImagePullSecrets> imagePullSecrets = null;

    public static final String SERIALIZED_NAME_LABELS = "labels";
    @SerializedName(SERIALIZED_NAME_LABELS)
    private Map<String, String> labels = null;

    public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
    @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
    private Map<String, String> nodeSelector = null;

    public static final String SERIALIZED_NAME_SECURITY_CONTEXT = "securityContext";
    @SerializedName(SERIALIZED_NAME_SECURITY_CONTEXT)
    private V1alpha1SourceSpecPodSecurityContext securityContext;

    public static final String SERIALIZED_NAME_TERMINATION_GRACE_PERIOD_SECONDS = "terminationGracePeriodSeconds";
    @SerializedName(SERIALIZED_NAME_TERMINATION_GRACE_PERIOD_SECONDS)
    private Long terminationGracePeriodSeconds;

    public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
    @SerializedName(SERIALIZED_NAME_TOLERATIONS)
    private List<V1alpha1SourceSpecPodTolerations> tolerations = null;

    public static final String SERIALIZED_NAME_VOLUMES = "volumes";
    @SerializedName(SERIALIZED_NAME_VOLUMES)
    private List<V1alpha1SourceSpecPodVolumes> volumes = null;


    public V1alpha1SourceSpecPod affinity(V1alpha1SourceSpecPodAffinity affinity) {

        this.affinity = affinity;
        return this;
    }

    /**
     * Get affinity
     * @return affinity
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1alpha1SourceSpecPodAffinity getAffinity() {
        return affinity;
    }


    public void setAffinity(V1alpha1SourceSpecPodAffinity affinity) {
        this.affinity = affinity;
    }


    public V1alpha1SourceSpecPod annotations(Map<String, String> annotations) {

        this.annotations = annotations;
        return this;
    }

    public V1alpha1SourceSpecPod putAnnotationsItem(String key, String annotationsItem) {
        if (this.annotations == null) {
            this.annotations = new HashMap<String, String>();
        }
        this.annotations.put(key, annotationsItem);
        return this;
    }

    /**
     * Annotations specifies the annotations to attach to pods the operator creates
     * @return annotations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Annotations specifies the annotations to attach to pods the operator creates")

    public Map<String, String> getAnnotations() {
        return annotations;
    }


    public void setAnnotations(Map<String, String> annotations) {
        this.annotations = annotations;
    }


    public V1alpha1SourceSpecPod imagePullSecrets(List<V1alpha1SourceSpecPodImagePullSecrets> imagePullSecrets) {

        this.imagePullSecrets = imagePullSecrets;
        return this;
    }

    public V1alpha1SourceSpecPod addImagePullSecretsItem(V1alpha1SourceSpecPodImagePullSecrets imagePullSecretsItem) {
        if (this.imagePullSecrets == null) {
            this.imagePullSecrets = new ArrayList<V1alpha1SourceSpecPodImagePullSecrets>();
        }
        this.imagePullSecrets.add(imagePullSecretsItem);
        return this;
    }

    /**
     * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
     * @return imagePullSecrets
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.")

    public List<V1alpha1SourceSpecPodImagePullSecrets> getImagePullSecrets() {
        return imagePullSecrets;
    }


    public void setImagePullSecrets(List<V1alpha1SourceSpecPodImagePullSecrets> imagePullSecrets) {
        this.imagePullSecrets = imagePullSecrets;
    }


    public V1alpha1SourceSpecPod labels(Map<String, String> labels) {

        this.labels = labels;
        return this;
    }

    public V1alpha1SourceSpecPod putLabelsItem(String key, String labelsItem) {
        if (this.labels == null) {
            this.labels = new HashMap<String, String>();
        }
        this.labels.put(key, labelsItem);
        return this;
    }

    /**
     * Labels specifies the labels to attach to pod the operator creates for the cluster.
     * @return labels
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Labels specifies the labels to attach to pod the operator creates for the cluster.")

    public Map<String, String> getLabels() {
        return labels;
    }


    public void setLabels(Map<String, String> labels) {
        this.labels = labels;
    }


    public V1alpha1SourceSpecPod nodeSelector(Map<String, String> nodeSelector) {

        this.nodeSelector = nodeSelector;
        return this;
    }

    public V1alpha1SourceSpecPod putNodeSelectorItem(String key, String nodeSelectorItem) {
        if (this.nodeSelector == null) {
            this.nodeSelector = new HashMap<String, String>();
        }
        this.nodeSelector.put(key, nodeSelectorItem);
        return this;
    }

    /**
     * NodeSelector specifies a map of key-value pairs. For a pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels.
     * @return nodeSelector
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "NodeSelector specifies a map of key-value pairs. For a pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels.")

    public Map<String, String> getNodeSelector() {
        return nodeSelector;
    }


    public void setNodeSelector(Map<String, String> nodeSelector) {
        this.nodeSelector = nodeSelector;
    }


    public V1alpha1SourceSpecPod securityContext(V1alpha1SourceSpecPodSecurityContext securityContext) {

        this.securityContext = securityContext;
        return this;
    }

    /**
     * Get securityContext
     * @return securityContext
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public V1alpha1SourceSpecPodSecurityContext getSecurityContext() {
        return securityContext;
    }


    public void setSecurityContext(V1alpha1SourceSpecPodSecurityContext securityContext) {
        this.securityContext = securityContext;
    }


    public V1alpha1SourceSpecPod terminationGracePeriodSeconds(Long terminationGracePeriodSeconds) {

        this.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
        return this;
    }

    /**
     * TerminationGracePeriodSeconds is the amount of time that kubernetes will give for a pod before terminating it.
     * @return terminationGracePeriodSeconds
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "TerminationGracePeriodSeconds is the amount of time that kubernetes will give for a pod before terminating it.")

    public Long getTerminationGracePeriodSeconds() {
        return terminationGracePeriodSeconds;
    }


    public void setTerminationGracePeriodSeconds(Long terminationGracePeriodSeconds) {
        this.terminationGracePeriodSeconds = terminationGracePeriodSeconds;
    }


    public V1alpha1SourceSpecPod tolerations(List<V1alpha1SourceSpecPodTolerations> tolerations) {

        this.tolerations = tolerations;
        return this;
    }

    public V1alpha1SourceSpecPod addTolerationsItem(V1alpha1SourceSpecPodTolerations tolerationsItem) {
        if (this.tolerations == null) {
            this.tolerations = new ArrayList<V1alpha1SourceSpecPodTolerations>();
        }
        this.tolerations.add(tolerationsItem);
        return this;
    }

    /**
     * Tolerations specifies the tolerations of a Pod
     * @return tolerations
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Tolerations specifies the tolerations of a Pod")

    public List<V1alpha1SourceSpecPodTolerations> getTolerations() {
        return tolerations;
    }


    public void setTolerations(List<V1alpha1SourceSpecPodTolerations> tolerations) {
        this.tolerations = tolerations;
    }


    public V1alpha1SourceSpecPod volumes(List<V1alpha1SourceSpecPodVolumes> volumes) {

        this.volumes = volumes;
        return this;
    }

    public V1alpha1SourceSpecPod addVolumesItem(V1alpha1SourceSpecPodVolumes volumesItem) {
        if (this.volumes == null) {
            this.volumes = new ArrayList<V1alpha1SourceSpecPodVolumes>();
        }
        this.volumes.add(volumesItem);
        return this;
    }

    /**
     * List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
     * @return volumes
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes")

    public List<V1alpha1SourceSpecPodVolumes> getVolumes() {
        return volumes;
    }


    public void setVolumes(List<V1alpha1SourceSpecPodVolumes> volumes) {
        this.volumes = volumes;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1alpha1SourceSpecPod v1alpha1SourceSpecPod = (V1alpha1SourceSpecPod) o;
        return Objects.equals(this.affinity, v1alpha1SourceSpecPod.affinity) &&
                Objects.equals(this.annotations, v1alpha1SourceSpecPod.annotations) &&
                Objects.equals(this.imagePullSecrets, v1alpha1SourceSpecPod.imagePullSecrets) &&
                Objects.equals(this.labels, v1alpha1SourceSpecPod.labels) &&
                Objects.equals(this.nodeSelector, v1alpha1SourceSpecPod.nodeSelector) &&
                Objects.equals(this.securityContext, v1alpha1SourceSpecPod.securityContext) &&
                Objects.equals(this.terminationGracePeriodSeconds, v1alpha1SourceSpecPod.terminationGracePeriodSeconds) &&
                Objects.equals(this.tolerations, v1alpha1SourceSpecPod.tolerations) &&
                Objects.equals(this.volumes, v1alpha1SourceSpecPod.volumes);
    }

    @Override
    public int hashCode() {
        return Objects.hash(affinity, annotations, imagePullSecrets, labels, nodeSelector, securityContext, terminationGracePeriodSeconds, tolerations, volumes);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1alpha1SourceSpecPod {\n");
        sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
        sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
        sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
        sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
        sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
        sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
        sb.append("    terminationGracePeriodSeconds: ").append(toIndentedString(terminationGracePeriodSeconds)).append("\n");
        sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
        sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

