/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.streamnative.cloud.models.source;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.*;

/**
 * V1alpha1SourceSpecOutputProducerConfCryptoConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-02T12:09:25.926Z[Etc/UTC]")
public class V1alpha1SourceSpecOutputProducerConfCryptoConfig {
    public static final String SERIALIZED_NAME_CONSUMER_CRYPTO_FAILURE_ACTION = "consumerCryptoFailureAction";
    @SerializedName(SERIALIZED_NAME_CONSUMER_CRYPTO_FAILURE_ACTION)
    private String consumerCryptoFailureAction;

    public static final String SERIALIZED_NAME_CRYPTO_KEY_READER_CLASS_NAME = "cryptoKeyReaderClassName";
    @SerializedName(SERIALIZED_NAME_CRYPTO_KEY_READER_CLASS_NAME)
    private String cryptoKeyReaderClassName;

    public static final String SERIALIZED_NAME_CRYPTO_KEY_READER_CONFIG = "cryptoKeyReaderConfig";
    @SerializedName(SERIALIZED_NAME_CRYPTO_KEY_READER_CONFIG)
    private Map<String, String> cryptoKeyReaderConfig = null;

    public static final String SERIALIZED_NAME_CRYPTO_SECRETS = "cryptoSecrets";
    @SerializedName(SERIALIZED_NAME_CRYPTO_SECRETS)
    private List<V1alpha1SourceSpecOutputProducerConfCryptoConfigCryptoSecrets> cryptoSecrets = null;

    public static final String SERIALIZED_NAME_ENCRYPTION_KEYS = "encryptionKeys";
    @SerializedName(SERIALIZED_NAME_ENCRYPTION_KEYS)
    private List<String> encryptionKeys = null;

    public static final String SERIALIZED_NAME_PRODUCER_CRYPTO_FAILURE_ACTION = "producerCryptoFailureAction";
    @SerializedName(SERIALIZED_NAME_PRODUCER_CRYPTO_FAILURE_ACTION)
    private String producerCryptoFailureAction;


    public V1alpha1SourceSpecOutputProducerConfCryptoConfig consumerCryptoFailureAction(String consumerCryptoFailureAction) {

        this.consumerCryptoFailureAction = consumerCryptoFailureAction;
        return this;
    }

    /**
     * Get consumerCryptoFailureAction
     * @return consumerCryptoFailureAction
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getConsumerCryptoFailureAction() {
        return consumerCryptoFailureAction;
    }


    public void setConsumerCryptoFailureAction(String consumerCryptoFailureAction) {
        this.consumerCryptoFailureAction = consumerCryptoFailureAction;
    }


    public V1alpha1SourceSpecOutputProducerConfCryptoConfig cryptoKeyReaderClassName(String cryptoKeyReaderClassName) {

        this.cryptoKeyReaderClassName = cryptoKeyReaderClassName;
        return this;
    }

    /**
     * Get cryptoKeyReaderClassName
     * @return cryptoKeyReaderClassName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getCryptoKeyReaderClassName() {
        return cryptoKeyReaderClassName;
    }


    public void setCryptoKeyReaderClassName(String cryptoKeyReaderClassName) {
        this.cryptoKeyReaderClassName = cryptoKeyReaderClassName;
    }


    public V1alpha1SourceSpecOutputProducerConfCryptoConfig cryptoKeyReaderConfig(Map<String, String> cryptoKeyReaderConfig) {

        this.cryptoKeyReaderConfig = cryptoKeyReaderConfig;
        return this;
    }

    public V1alpha1SourceSpecOutputProducerConfCryptoConfig putCryptoKeyReaderConfigItem(String key, String cryptoKeyReaderConfigItem) {
        if (this.cryptoKeyReaderConfig == null) {
            this.cryptoKeyReaderConfig = new HashMap<String, String>();
        }
        this.cryptoKeyReaderConfig.put(key, cryptoKeyReaderConfigItem);
        return this;
    }

    /**
     * Get cryptoKeyReaderConfig
     * @return cryptoKeyReaderConfig
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Map<String, String> getCryptoKeyReaderConfig() {
        return cryptoKeyReaderConfig;
    }


    public void setCryptoKeyReaderConfig(Map<String, String> cryptoKeyReaderConfig) {
        this.cryptoKeyReaderConfig = cryptoKeyReaderConfig;
    }


    public V1alpha1SourceSpecOutputProducerConfCryptoConfig cryptoSecrets(List<V1alpha1SourceSpecOutputProducerConfCryptoConfigCryptoSecrets> cryptoSecrets) {

        this.cryptoSecrets = cryptoSecrets;
        return this;
    }

    public V1alpha1SourceSpecOutputProducerConfCryptoConfig addCryptoSecretsItem(V1alpha1SourceSpecOutputProducerConfCryptoConfigCryptoSecrets cryptoSecretsItem) {
        if (this.cryptoSecrets == null) {
            this.cryptoSecrets = new ArrayList<V1alpha1SourceSpecOutputProducerConfCryptoConfigCryptoSecrets>();
        }
        this.cryptoSecrets.add(cryptoSecretsItem);
        return this;
    }

    /**
     * Get cryptoSecrets
     * @return cryptoSecrets
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<V1alpha1SourceSpecOutputProducerConfCryptoConfigCryptoSecrets> getCryptoSecrets() {
        return cryptoSecrets;
    }


    public void setCryptoSecrets(List<V1alpha1SourceSpecOutputProducerConfCryptoConfigCryptoSecrets> cryptoSecrets) {
        this.cryptoSecrets = cryptoSecrets;
    }


    public V1alpha1SourceSpecOutputProducerConfCryptoConfig encryptionKeys(List<String> encryptionKeys) {

        this.encryptionKeys = encryptionKeys;
        return this;
    }

    public V1alpha1SourceSpecOutputProducerConfCryptoConfig addEncryptionKeysItem(String encryptionKeysItem) {
        if (this.encryptionKeys == null) {
            this.encryptionKeys = new ArrayList<String>();
        }
        this.encryptionKeys.add(encryptionKeysItem);
        return this;
    }

    /**
     * Get encryptionKeys
     * @return encryptionKeys
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public List<String> getEncryptionKeys() {
        return encryptionKeys;
    }


    public void setEncryptionKeys(List<String> encryptionKeys) {
        this.encryptionKeys = encryptionKeys;
    }


    public V1alpha1SourceSpecOutputProducerConfCryptoConfig producerCryptoFailureAction(String producerCryptoFailureAction) {

        this.producerCryptoFailureAction = producerCryptoFailureAction;
        return this;
    }

    /**
     * Get producerCryptoFailureAction
     * @return producerCryptoFailureAction
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public String getProducerCryptoFailureAction() {
        return producerCryptoFailureAction;
    }


    public void setProducerCryptoFailureAction(String producerCryptoFailureAction) {
        this.producerCryptoFailureAction = producerCryptoFailureAction;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1alpha1SourceSpecOutputProducerConfCryptoConfig v1alpha1SourceSpecOutputProducerConfCryptoConfig = (V1alpha1SourceSpecOutputProducerConfCryptoConfig) o;
        return Objects.equals(this.consumerCryptoFailureAction, v1alpha1SourceSpecOutputProducerConfCryptoConfig.consumerCryptoFailureAction) &&
                Objects.equals(this.cryptoKeyReaderClassName, v1alpha1SourceSpecOutputProducerConfCryptoConfig.cryptoKeyReaderClassName) &&
                Objects.equals(this.cryptoKeyReaderConfig, v1alpha1SourceSpecOutputProducerConfCryptoConfig.cryptoKeyReaderConfig) &&
                Objects.equals(this.cryptoSecrets, v1alpha1SourceSpecOutputProducerConfCryptoConfig.cryptoSecrets) &&
                Objects.equals(this.encryptionKeys, v1alpha1SourceSpecOutputProducerConfCryptoConfig.encryptionKeys) &&
                Objects.equals(this.producerCryptoFailureAction, v1alpha1SourceSpecOutputProducerConfCryptoConfig.producerCryptoFailureAction);
    }

    @Override
    public int hashCode() {
        return Objects.hash(consumerCryptoFailureAction, cryptoKeyReaderClassName, cryptoKeyReaderConfig, cryptoSecrets, encryptionKeys, producerCryptoFailureAction);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1alpha1SourceSpecOutputProducerConfCryptoConfig {\n");
        sb.append("    consumerCryptoFailureAction: ").append(toIndentedString(consumerCryptoFailureAction)).append("\n");
        sb.append("    cryptoKeyReaderClassName: ").append(toIndentedString(cryptoKeyReaderClassName)).append("\n");
        sb.append("    cryptoKeyReaderConfig: ").append(toIndentedString(cryptoKeyReaderConfig)).append("\n");
        sb.append("    cryptoSecrets: ").append(toIndentedString(cryptoSecrets)).append("\n");
        sb.append("    encryptionKeys: ").append(toIndentedString(encryptionKeys)).append("\n");
        sb.append("    producerCryptoFailureAction: ").append(toIndentedString(producerCryptoFailureAction)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

