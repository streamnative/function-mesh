/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.streamnative.cloud.models.source;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
 */
@ApiModel(description = "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-02-02T12:09:25.926Z[Etc/UTC]")
public class V1alpha1SourceSpecPodVsphereVolume {
    public static final String SERIALIZED_NAME_FS_TYPE = "fsType";
    @SerializedName(SERIALIZED_NAME_FS_TYPE)
    private String fsType;

    public static final String SERIALIZED_NAME_STORAGE_POLICY_I_D = "storagePolicyID";
    @SerializedName(SERIALIZED_NAME_STORAGE_POLICY_I_D)
    private String storagePolicyID;

    public static final String SERIALIZED_NAME_STORAGE_POLICY_NAME = "storagePolicyName";
    @SerializedName(SERIALIZED_NAME_STORAGE_POLICY_NAME)
    private String storagePolicyName;

    public static final String SERIALIZED_NAME_VOLUME_PATH = "volumePath";
    @SerializedName(SERIALIZED_NAME_VOLUME_PATH)
    private String volumePath;


    public V1alpha1SourceSpecPodVsphereVolume fsType(String fsType) {

        this.fsType = fsType;
        return this;
    }

    /**
     * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \&quot;ext4\&quot;, \&quot;xfs\&quot;, \&quot;ntfs\&quot;. Implicitly inferred to be \&quot;ext4\&quot; if unspecified.
     * @return fsType
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.")

    public String getFsType() {
        return fsType;
    }


    public void setFsType(String fsType) {
        this.fsType = fsType;
    }


    public V1alpha1SourceSpecPodVsphereVolume storagePolicyID(String storagePolicyID) {

        this.storagePolicyID = storagePolicyID;
        return this;
    }

    /**
     * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     * @return storagePolicyID
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.")

    public String getStoragePolicyID() {
        return storagePolicyID;
    }


    public void setStoragePolicyID(String storagePolicyID) {
        this.storagePolicyID = storagePolicyID;
    }


    public V1alpha1SourceSpecPodVsphereVolume storagePolicyName(String storagePolicyName) {

        this.storagePolicyName = storagePolicyName;
        return this;
    }

    /**
     * Storage Policy Based Management (SPBM) profile name.
     * @return storagePolicyName
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "Storage Policy Based Management (SPBM) profile name.")

    public String getStoragePolicyName() {
        return storagePolicyName;
    }


    public void setStoragePolicyName(String storagePolicyName) {
        this.storagePolicyName = storagePolicyName;
    }


    public V1alpha1SourceSpecPodVsphereVolume volumePath(String volumePath) {

        this.volumePath = volumePath;
        return this;
    }

    /**
     * Path that identifies vSphere volume vmdk
     * @return volumePath
     **/
    @ApiModelProperty(required = true, value = "Path that identifies vSphere volume vmdk")

    public String getVolumePath() {
        return volumePath;
    }


    public void setVolumePath(String volumePath) {
        this.volumePath = volumePath;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1alpha1SourceSpecPodVsphereVolume v1alpha1SourceSpecPodVsphereVolume = (V1alpha1SourceSpecPodVsphereVolume) o;
        return Objects.equals(this.fsType, v1alpha1SourceSpecPodVsphereVolume.fsType) &&
                Objects.equals(this.storagePolicyID, v1alpha1SourceSpecPodVsphereVolume.storagePolicyID) &&
                Objects.equals(this.storagePolicyName, v1alpha1SourceSpecPodVsphereVolume.storagePolicyName) &&
                Objects.equals(this.volumePath, v1alpha1SourceSpecPodVsphereVolume.volumePath);
    }

    @Override
    public int hashCode() {
        return Objects.hash(fsType, storagePolicyID, storagePolicyName, volumePath);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1alpha1SourceSpecPodVsphereVolume {\n");
        sb.append("    fsType: ").append(toIndentedString(fsType)).append("\n");
        sb.append("    storagePolicyID: ").append(toIndentedString(storagePolicyID)).append("\n");
        sb.append("    storagePolicyName: ").append(toIndentedString(storagePolicyName)).append("\n");
        sb.append("    volumePath: ").append(toIndentedString(volumePath)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

