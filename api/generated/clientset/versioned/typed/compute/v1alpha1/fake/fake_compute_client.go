// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/streamnative/function-mesh/api/generated/clientset/versioned/typed/compute/v1alpha1"
	rest "k8s.io/client-go/rest"
	testing "k8s.io/client-go/testing"
)

type FakeComputeV1alpha1 struct {
	*testing.Fake
}

func (c *FakeComputeV1alpha1) ConnectorCatalogs(namespace string) v1alpha1.ConnectorCatalogInterface {
	return &FakeConnectorCatalogs{c, namespace}
}

func (c *FakeComputeV1alpha1) Functions(namespace string) v1alpha1.FunctionInterface {
	return &FakeFunctions{c, namespace}
}

func (c *FakeComputeV1alpha1) FunctionMeshes(namespace string) v1alpha1.FunctionMeshInterface {
	return &FakeFunctionMeshes{c, namespace}
}

func (c *FakeComputeV1alpha1) Sinks(namespace string) v1alpha1.SinkInterface {
	return &FakeSinks{c, namespace}
}

func (c *FakeComputeV1alpha1) Sources(namespace string) v1alpha1.SourceInterface {
	return &FakeSources{c, namespace}
}

// RESTClient returns a RESTClient that is used to communicate
// with API server by this client implementation.
func (c *FakeComputeV1alpha1) RESTClient() rest.Interface {
	var ret *rest.RESTClient
	return ret
}
