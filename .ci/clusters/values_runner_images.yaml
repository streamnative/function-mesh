#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
volumes:
  persistence: false

# disabled AntiAffinity
affinity:
  anti_affinity: false

# disable auto recovery
components:
  autorecovery: false
  pulsar_manager: false
  sql_worker: false

## disable monitoring stack
monitoring:
  # monitoring - prometheus
  prometheus: false
  # monitoring - grafana
  grafana: false
  # monitoring - node_exporter
  node_exporter: false

images:
  zookeeper:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent
  bookie:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent
  autorecovery:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent
  broker:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent
  proxy:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent
  functions:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent
  presto:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent

zookeeper:
  replicaCount: 1

bookkeeper:
  replicaCount: 0
  metadata:
    image:
      repository: streamnative/sn-platform
      tag: 2.9.2.23
  configData:
    PULSAR_PREFIX_autoRecoveryDaemonEnabled: "false"
    PULSAR_PREFIX_dlog.bkcEnsembleSize: "1"
    PULSAR_PREFIX_dlog.bkcWriteQuorumSize: "1"
    PULSAR_PREFIX_dlog.bkcAckQuorumSize: "1"
    # `BOOKIE_MEM` is used for `bookie shell`
    BOOKIE_MEM: >
      -Xms128m
      -Xmx256m
      -XX:MaxDirectMemorySize=256m
    # we use `bin/pulsar` for starting bookie daemons
    PULSAR_MEM: >
      -Xms128m
      -Xmx256m
      -XX:MaxDirectMemorySize=256m
    PULSAR_GC: >
      -XX:+UseG1GC
      -XX:MaxGCPauseMillis=10
      -XX:+ParallelRefProcEnabled
      -XX:+UnlockExperimentalVMOptions
      -XX:+AggressiveOpts
      -XX:+DoEscapeAnalysis
      -XX:ParallelGCThreads=4
      -XX:ConcGCThreads=4
      -XX:G1NewSizePercent=50
      -XX:+DisableExplicitGC
      -XX:-ResizePLAB
      -XX:+ExitOnOutOfMemoryError
      -XX:+PerfDisableSharedMem

pulsar_metadata:
  image:
    repository: streamnative/sn-platform
    tag: 2.9.2.23
    pullPolicy: IfNotPresent

broker:
  replicaCount: 1
  configData:
    ## Enable `autoSkipNonRecoverableData` since bookkeeper is running
    ## without persistence
    autoSkipNonRecoverableData: "true"
    # storage settings
    managedLedgerDefaultEnsembleSize: "1"
    managedLedgerDefaultWriteQuorum: "1"
    managedLedgerDefaultAckQuorum: "1"

proxy:
  replicaCount: 1

## Pulsar: Functions Worker
## templates/function-worker-configmap.yaml
##
functions:
  functionState: true
  useDedicatedRunner: false
  component: functions-worker
  enableCustomizerRuntime: false
  runtimeCustomizerClassName: "org.apache.pulsar.functions.runtime.kubernetes.BasicKubernetesManifestCustomizer"
  pulsarExtraClasspath: "extraLibs"
  # Specify the namespace to run pulsar functions
  jobNamespace: ""
  # Specify the pulsar root directory
  pulsarRootDir: ""
  configData:
    downloadDirectory: download/pulsar_functions
    pulsarFunctionsNamespace: public/functions
    functionMetadataTopicName: metadata
    clusterCoordinationTopicName: coordinate
    numHttpServerThreads: 8
    schedulerClassName: "org.apache.pulsar.functions.worker.scheduler.RoundRobinScheduler"
    functionAssignmentTopicName: "assignments"
    failureCheckFreqMs: 30000
    rescheduleTimeoutMs: 60000
    initialBrokerReconnectMaxRetries: 60
    assignmentWriteMaxRetries: 60
    instanceLivenessCheckFreqMs: 30000
    # Frequency how often worker performs compaction on function-topics
    topicCompactionFrequencySec: 1800
    # kubernetes runtime
    functionRuntimeFactoryClassName: org.apache.pulsar.functions.runtime.kubernetes.KubernetesRuntimeFactory
    # Connectors
    connectorsDirectory: ./connectors
    functionsDirectory: ./functions
    narExtractionDirectory: ""
  functionInstanceMinResources:
    cpu: 0.1
    ram: 10485760
    disk: 104857600
  functionInstanceMaxResources:
    cpu: 0.2
    ram: 104857600
    disk: 1048576000
  functionRuntimeFactoryConfigs:
    functionDockerImages:
      JAVA: "localhost:5000/pulsar-functions-java-runner:2.9.2.23"
      PYTHON: "localhost:5000/pulsar-functions-python-runner:2.9.2.23"
      GO: "localhost:5000/pulsar-functions-go-runner:2.9.2.23"
    functionInstanceMinResources:
      cpu: 0.1
      ram: 10485760
      disk: 104857600
    functionInstanceMaxResources:
      cpu: 0.2
      ram: 104857600
      disk: 1048576000
