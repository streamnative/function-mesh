apiVersion: compute.functionmesh.io/v1alpha1
kind: Source
metadata:
  name: batch-source-sample
spec:
  className: org.apache.pulsar.io.batchdatagenerator.BatchDataGeneratorSource
  replicas: 1
  maxReplicas: 1
  output:
    producerConf:
      maxPendingMessages: 1000
      maxPendingMessagesAcrossPartitions: 50000
      useThreadLocalProducers: true
    topic: persistent://public/default/output-source-topic
    typeClassName: org.apache.pulsar.io.batchdatagenerator.Person
  forwardSourceMessageProperty: true
  logTopic: persistent://public/default/batch-source-logs
  logTopicAgent: sidecar
  resources:
    limits:
      cpu: "0.2"
      memory: 1.1G
    requests:
      cpu: "0.1"
      memory: 1G
  batchSourceConfig:
    discoveryTriggererClassName: "org.apache.pulsar.io.batchdiscovery.ImmediateTriggerer"
  sourceConfig:
    test: test
  pulsar:
    pulsarConfig: "test-source"
    tlsConfig:
      enabled: false
      allowInsecure: false
      hostnameVerification: true
      certSecretName: sn-platform-tls-broker
      certSecretKey: ""
    authConfig:
      oauth2Config:
        audience: urn:sn:pulsar:sndev:test
        issuerUrl: https://auth.sncloud-stg.dev/
        keySecretName: sn-platform-oauth2-private-key
        keySecretKey: auth.json
    cleanupAuthConfig:
      oauth2Config:
        audience: urn:sn:pulsar:sndev:test
        issuerUrl: https://auth.sncloud-stg.dev/
        keySecretName: sn-platform-oauth2-private-key
        keySecretKey: auth.json
  image: streamnative/pulsar-io-batch-data-generator:3.2.2.1
  java:
    jar: connectors/pulsar-io-batch-data-generator-3.2.2.1.nar
    jarLocation: "" # use pulsar provided connectors
    # use package name:
    # jarLocation: function://public/default/nul-test-java-source@v1
  clusterName: test-pulsar
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-source
data:
  webServiceURL: http://sn-platform-pulsar-broker.default.svc.cluster.local:8080
  brokerServiceURL: pulsar://sn-platform-pulsar-broker.default.svc.cluster.local:6650
