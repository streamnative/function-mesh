apiVersion: v1
kind: ConfigMap
metadata:
  name: pulsar-manager-standalone-configmap
data:
  application.properties: |
    spring.cloud.refresh.refreshable=none
    server.port=7750
    # configuration log
    logging.path=
    logging.file=pulsar-manager.log
    # DEBUG print execute sql
    logging.level.org.apache=INFO
    mybatis.type-aliases-package=org.apache.pulsar.manager
    # postgresql configuration
    spring.datasource.driver-class-name=org.postgresql.Driver
    spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/pulsar_manager
    spring.datasource.username=pulsar
    spring.datasource.password=puslar
    # zuul config
    # https://cloud.spring.io/spring-cloud-static/Dalston.SR5/multi/multi__router_and_filter_zuul.html
    # By Default Zuul adds  Authorization to be dropped headers list. Below we are manually setting it
    zuul.sensitive-headers=Cookie,Set-Cookie
    zuul.routes.admin.path=/admin/**
    zuul.routes.admin.url=http://localhost:8080/admin/
    zuul.routes.lookup.path=/lookup/**
    zuul.routes.lookup.url=http://localhost:8080/lookup/
    # force 'mysql' for HerdDB, comment out for postgresql
    pagehelper.helperDialect=postgresql
    backend.directRequestBroker=true
    backend.directRequestHost=http://localhost:8080
    backend.jwt.token=
    jwt.secret=dab1c8ba-b01b-11e9-b384-186590e06885
    jwt.sessionTime=2592000
    # If user.management.enable is true, the following account and password will no longer be valid.
    pulsar-manager.account=pulsar
    pulsar-manager.password=pulsar
    # If true, the database is used for user management
    user.management.enable=true
    # Optional -> SECRET, PRIVATE, default -> PRIVATE, empty -> disable auth
    # SECRET mode -> bin/pulsar tokens create --secret-key file:///path/to/my-secret.key --subject test-user
    # PRIVATE mode -> bin/pulsar tokens create --private-key file:///path/to/my-private.key --subject test-user
    # Detail information: http://pulsar.apache.org/docs/en/security-token-admin/
    jwt.broker.token.mode=
    jwt.broker.secret.key=file:///path/broker-secret.key
    jwt.broker.public.key=file:///path/pulsar/broker-public.key
    jwt.broker.private.key=file:///path/broker-private.key
    # bookie
    bookie.host=http://localhost:8050
    bookie.enable=false
    redirect.scheme=http
    redirect.host=localhost
    redirect.port=9527
    # Stats interval
    # millisecond
    insert.stats.interval=30000
    # millisecond
    clear.stats.interval=300000
    init.delay.interval=0
    # cluster data reload
    cluster.cache.reload.interval.ms=60000
    # Third party login options
    third.party.login.option=
    # Github login configuration
    github.client.id=your-client-id
    github.client.secret=your-client-secret
    github.oauth.host=https://github.com/login/oauth/access_token
    github.user.info=https://api.github.com/user
    github.login.host=https://github.com/login/oauth/authorize
    github.redirect.host=http://localhost:9527
    user.access.token.expire=604800
    # thymeleaf configuration for third login.
    spring.thymeleaf.cache=false
    spring.thymeleaf.prefix=classpath:/templates/
    spring.thymeleaf.check-template-location=true
    spring.thymeleaf.suffix=.html
    spring.thymeleaf.encoding=UTF-8
    spring.thymeleaf.servlet.content-type=text/html
    spring.thymeleaf.mode=HTML5
    # default environment configuration
    default.environment.name=
    default.environment.service_url=
    # enable tls encryption
    # keytool -import -alias test-keystore -keystore ca-certs -file certs/ca.cert.pem
    tls.enabled=false
    tls.keystore=keystore-file-path
    tls.keystore.password=keystore-password
    tls.hostname.verifier=false
    tls.pulsar.admin.ca-certs=ca-client-path
    # support peek message, default false
    pulsar.peek.message=false
    cluster.client.cache.interval.ms=60000
    # vault server configuration
    vault.authentication.enable=false
    vault.server.host=http://127.0.0.1:8200
    vault.root.token=test-token
    # 60 * 60 * 24 * 365
    vault.token.lease.increment=31536000
    vault.token.default.user.increment=86400
    vault.is.super.user.claim=isSuper
    vault.secret.prefix=secret/pulsar/
    vault.role.claim=role
    vault.default.login.method=userpass
    # millisecond
    vault.token.init.delay.interval=60000
    vault.token.refresh.time.interval=1800000
    # days
    vault.token.refresh.default.lease=30

    cloud.controller.certificate-authority-data=authority-data
    cloud.controller.insecure-skip-tls-verify=false
    cloud.controller.host=controller-host
    cloud.controller.token=controller-token
    cloud.controller.cluster.claim=cloud.streamnative.io/pulsar-cluster
    cloud.controller.instance.claim=cloud.streamnative.io/pulsar-instance
---
apiVersion: v1
kind: Service
metadata:
  name: pulsar-manager-standalone
  labels:
    app: pulsar-manager-standalone
spec:
  ports:
    - name: ui
      port: 9527
      targetPort: 9527
      protocol: TCP
  type: LoadBalancer
  selector:
    app: pulsar-manager-standalone
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pulsar-manager-standalone
spec:
  selector:
    matchLabels:
      app: pulsar-manager-standalone # has to match .spec.template.metadata.labels
  serviceName: pulsar-manager-standalone
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: pulsar-manager-standalone # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: standalone
          image: gcr.io/affable-ray-226821/sn-pulsar-manager@sha256:4a2963f9e7fc93378ed8bbf2623699d36433c39d670801358b5cc01c1ad3e0a4
          # debug
          # command: ["cat","/pulsar-manager/pulsar-manager/application.properties"]
          env:
            - name: SPRING_CONFIGURATION_FILE
              value: /pulsar-manager/pulsar-manager/application.properties
          ports:
            - containerPort: 9527
              name: standalone
          volumeMounts:
            - name: cloud-data-dev
              mountPath: /data
            - name: pulsar-manager-standalone-configmap
              mountPath: /pulsar-manager/pulsar-manager/application.properties
              subPath: application.properties
      volumes:
        - name: pulsar-manager-standalone-configmap
          configMap:
            name: pulsar-manager-standalone-configmap
            items:
              - key: application.properties
                path: application.properties
  volumeClaimTemplates:
    - metadata:
        name: cloud-data-dev
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi