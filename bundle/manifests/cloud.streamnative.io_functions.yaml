apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: functions.cloud.streamnative.io
spec:
  group: cloud.streamnative.io
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      description: Function is the Schema for the functions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FunctionSpec defines the desired state of Function
          properties:
            autoAck:
              type: boolean
            className:
              type: string
            cleanupSubscription:
              type: boolean
            clusterName:
              type: string
            deadLetterTopic:
              type: string
            forwardSourceMessageProperty:
              type: boolean
            funcConfig:
              additionalProperties:
                type: string
              type: object
            golang:
              properties:
                go:
                  type: string
                goLocation:
                  type: string
              type: object
            input:
              properties:
                customSchemaSources:
                  additionalProperties:
                    type: string
                  type: object
                customSerdeSources:
                  additionalProperties:
                    type: string
                  type: object
                sourceSpecs:
                  additionalProperties:
                    properties:
                      consumerProperties:
                        additionalProperties:
                          type: string
                        type: object
                      cryptoConfig:
                        properties:
                          consumerCryptoFailureAction:
                            type: string
                          cryptoKeyReaderClassName:
                            type: string
                          cryptoKeyReaderConfig:
                            additionalProperties:
                              type: string
                            type: object
                          encryptionKeys:
                            items:
                              type: string
                            type: array
                          producerCryptoFailureAction:
                            type: string
                          secrets:
                            items:
                              properties:
                                asVolume:
                                  type: string
                                secretKey:
                                  type: string
                                secretName:
                                  type: string
                              required:
                              - secretKey
                              - secretName
                              type: object
                            type: array
                        type: object
                      isRegexPattern:
                        type: boolean
                      receiverQueueSize:
                        format: int32
                        type: integer
                      schemaProperties:
                        additionalProperties:
                          type: string
                        type: object
                      schemaType:
                        type: string
                      serdeClassname:
                        type: string
                    type: object
                  type: object
                topicPattern:
                  type: string
                topics:
                  items:
                    type: string
                  type: array
              type: object
            java:
              properties:
                jar:
                  type: string
                jarLocation:
                  type: string
              type: object
            logTopic:
              type: string
            maxMessageRetry:
              format: int32
              type: integer
            maxPendingAsyncRequests:
              format: int32
              type: integer
            maxReplicas:
              format: int32
              type: integer
            name:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run "make" to regenerate code after modifying this file'
              type: string
            output:
              properties:
                customSchemaSinks:
                  additionalProperties:
                    type: string
                  type: object
                producerConf:
                  properties:
                    cryptoConfig:
                      properties:
                        consumerCryptoFailureAction:
                          type: string
                        cryptoKeyReaderClassName:
                          type: string
                        cryptoKeyReaderConfig:
                          additionalProperties:
                            type: string
                          type: object
                        encryptionKeys:
                          items:
                            type: string
                          type: array
                        producerCryptoFailureAction:
                          type: string
                        secrets:
                          items:
                            properties:
                              asVolume:
                                type: string
                              secretKey:
                                type: string
                              secretName:
                                type: string
                            required:
                            - secretKey
                            - secretName
                            type: object
                          type: array
                      type: object
                    maxPendingMessages:
                      format: int32
                      type: integer
                    maxPendingMessagesAcrossPartitions:
                      format: int32
                      type: integer
                    useThreadLocalProducers:
                      type: boolean
                  type: object
                sinkSchemaType:
                  type: string
                sinkSerdeClassName:
                  type: string
                topic:
                  type: string
              type: object
            processingGuarantee:
              type: string
            pulsar:
              properties:
                authConfig:
                  type: string
                pulsarConfig:
                  description: The config map need to contain the following fields webServiceURL brokerServiceURL
                  type: string
              type: object
            python:
              properties:
                py:
                  type: string
                pyLocation:
                  type: string
              type: object
            replicas:
              format: int32
              type: integer
            resources:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            retainKeyOrdering:
              type: boolean
            retainOrdering:
              type: boolean
            runtimeFlags:
              type: string
            secretsMap:
              additionalProperties:
                properties:
                  key:
                    type: string
                  path:
                    type: string
                type: object
              type: object
            sinkType:
              type: string
            sourceType:
              type: string
            subscriptionName:
              type: string
            subscriptionPosition:
              type: string
            tenant:
              type: string
            timeout:
              format: int32
              type: integer
          type: object
        status:
          description: FunctionStatus defines the observed state of Function
          properties:
            conditions:
              additionalProperties:
                description: The `Status` of a given `Condition` and the `Action` needed to reach the `Status`
                properties:
                  action:
                    type: string
                  condition:
                    type: string
                  status:
                    type: string
                type: object
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run "make" to regenerate code after modifying this file'
              type: object
            replicas:
              format: int32
              type: integer
            selector:
              type: string
          required:
          - conditions
          - replicas
          - selector
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
