[loggers]
keys=root

[handlers]
keys={{ .Handlers }}

[formatters]
keys=formatter

[logger_root]
level={{ .Level }}
handlers={{ .Handlers }}

{{- /* ---- Rolling handlers (optional) ---- */ -}}
{{- if .Rolling.Enabled }}
{{- if eq .Rolling.Type "size" }}
[handler_rotating_file_handler]
class=logging.handlers.RotatingFileHandler
level={{ .Level }}
formatter=formatter
args=('{{ .Rolling.File }}', 'a', {{ .Rolling.MaxBytes }}, {{ .Rolling.Backups }})
{{- else if eq .Rolling.Type "time" }}
[handler_timed_rotating_file_handler]
class=logging.handlers.TimedRotatingFileHandler
level={{ .Level }}
formatter=formatter
args=('{{ .Rolling.File }}', '{{ .Rolling.When }}', {{ .Rolling.Interval }}, {{ .Rolling.Backups }})
{{- end }}
{{- end }}

[handler_stream_handler]
class=logging.StreamHandler
level={{ .Level }}
formatter=formatter
args=(sys.stdout,)

[formatter_formatter]
{{- if eq .Format "json" }}
class=pythonjsonlogger.jsonlogger.JsonFormatter
format=%(message)s
{{- else }}
format=[%(asctime)s] [%(levelname)s] %(filename)s:%(lineno)d %(message)s
datefmt=%Y-%m-%d %H:%M:%S %z
{{- end }}
