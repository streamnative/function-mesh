//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.17.3
// source: Function.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessingGuarantees int32

const (
	ProcessingGuarantees_ATLEAST_ONCE     ProcessingGuarantees = 0 // [default value]
	ProcessingGuarantees_ATMOST_ONCE      ProcessingGuarantees = 1
	ProcessingGuarantees_EFFECTIVELY_ONCE ProcessingGuarantees = 2
	ProcessingGuarantees_MANUAL           ProcessingGuarantees = 3
)

// Enum value maps for ProcessingGuarantees.
var (
	ProcessingGuarantees_name = map[int32]string{
		0: "ATLEAST_ONCE",
		1: "ATMOST_ONCE",
		2: "EFFECTIVELY_ONCE",
		3: "MANUAL",
	}
	ProcessingGuarantees_value = map[string]int32{
		"ATLEAST_ONCE":     0,
		"ATMOST_ONCE":      1,
		"EFFECTIVELY_ONCE": 2,
		"MANUAL":           3,
	}
)

func (x ProcessingGuarantees) Enum() *ProcessingGuarantees {
	p := new(ProcessingGuarantees)
	*p = x
	return p
}

func (x ProcessingGuarantees) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingGuarantees) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[0].Descriptor()
}

func (ProcessingGuarantees) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[0]
}

func (x ProcessingGuarantees) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingGuarantees.Descriptor instead.
func (ProcessingGuarantees) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{0}
}

type SubscriptionType int32

const (
	SubscriptionType_SHARED     SubscriptionType = 0
	SubscriptionType_FAILOVER   SubscriptionType = 1
	SubscriptionType_KEY_SHARED SubscriptionType = 2
)

// Enum value maps for SubscriptionType.
var (
	SubscriptionType_name = map[int32]string{
		0: "SHARED",
		1: "FAILOVER",
		2: "KEY_SHARED",
	}
	SubscriptionType_value = map[string]int32{
		"SHARED":     0,
		"FAILOVER":   1,
		"KEY_SHARED": 2,
	}
)

func (x SubscriptionType) Enum() *SubscriptionType {
	p := new(SubscriptionType)
	*p = x
	return p
}

func (x SubscriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[1].Descriptor()
}

func (SubscriptionType) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[1]
}

func (x SubscriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionType.Descriptor instead.
func (SubscriptionType) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{1}
}

type SubscriptionPosition int32

const (
	SubscriptionPosition_LATEST   SubscriptionPosition = 0
	SubscriptionPosition_EARLIEST SubscriptionPosition = 1
)

// Enum value maps for SubscriptionPosition.
var (
	SubscriptionPosition_name = map[int32]string{
		0: "LATEST",
		1: "EARLIEST",
	}
	SubscriptionPosition_value = map[string]int32{
		"LATEST":   0,
		"EARLIEST": 1,
	}
)

func (x SubscriptionPosition) Enum() *SubscriptionPosition {
	p := new(SubscriptionPosition)
	*p = x
	return p
}

func (x SubscriptionPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[2].Descriptor()
}

func (SubscriptionPosition) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[2]
}

func (x SubscriptionPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionPosition.Descriptor instead.
func (SubscriptionPosition) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{2}
}

type CompressionType int32

const (
	CompressionType_LZ4    CompressionType = 0
	CompressionType_NONE   CompressionType = 1
	CompressionType_ZLIB   CompressionType = 2
	CompressionType_ZSTD   CompressionType = 3
	CompressionType_SNAPPY CompressionType = 4
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "LZ4",
		1: "NONE",
		2: "ZLIB",
		3: "ZSTD",
		4: "SNAPPY",
	}
	CompressionType_value = map[string]int32{
		"LZ4":    0,
		"NONE":   1,
		"ZLIB":   2,
		"ZSTD":   3,
		"SNAPPY": 4,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[3].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[3]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{3}
}

type FunctionState int32

const (
	FunctionState_RUNNING FunctionState = 0
	FunctionState_STOPPED FunctionState = 1
)

// Enum value maps for FunctionState.
var (
	FunctionState_name = map[int32]string{
		0: "RUNNING",
		1: "STOPPED",
	}
	FunctionState_value = map[string]int32{
		"RUNNING": 0,
		"STOPPED": 1,
	}
)

func (x FunctionState) Enum() *FunctionState {
	p := new(FunctionState)
	*p = x
	return p
}

func (x FunctionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionState) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[4].Descriptor()
}

func (FunctionState) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[4]
}

func (x FunctionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionState.Descriptor instead.
func (FunctionState) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{4}
}

type FunctionDetails_Runtime int32

const (
	FunctionDetails_JAVA   FunctionDetails_Runtime = 0
	FunctionDetails_PYTHON FunctionDetails_Runtime = 1
	FunctionDetails_GO     FunctionDetails_Runtime = 3
)

// Enum value maps for FunctionDetails_Runtime.
var (
	FunctionDetails_Runtime_name = map[int32]string{
		0: "JAVA",
		1: "PYTHON",
		3: "GO",
	}
	FunctionDetails_Runtime_value = map[string]int32{
		"JAVA":   0,
		"PYTHON": 1,
		"GO":     3,
	}
)

func (x FunctionDetails_Runtime) Enum() *FunctionDetails_Runtime {
	p := new(FunctionDetails_Runtime)
	*p = x
	return p
}

func (x FunctionDetails_Runtime) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionDetails_Runtime) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[5].Descriptor()
}

func (FunctionDetails_Runtime) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[5]
}

func (x FunctionDetails_Runtime) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionDetails_Runtime.Descriptor instead.
func (FunctionDetails_Runtime) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{2, 0}
}

type FunctionDetails_ComponentType int32

const (
	FunctionDetails_UNKNOWN  FunctionDetails_ComponentType = 0
	FunctionDetails_FUNCTION FunctionDetails_ComponentType = 1
	FunctionDetails_SOURCE   FunctionDetails_ComponentType = 2
	FunctionDetails_SINK     FunctionDetails_ComponentType = 3
)

// Enum value maps for FunctionDetails_ComponentType.
var (
	FunctionDetails_ComponentType_name = map[int32]string{
		0: "UNKNOWN",
		1: "FUNCTION",
		2: "SOURCE",
		3: "SINK",
	}
	FunctionDetails_ComponentType_value = map[string]int32{
		"UNKNOWN":  0,
		"FUNCTION": 1,
		"SOURCE":   2,
		"SINK":     3,
	}
)

func (x FunctionDetails_ComponentType) Enum() *FunctionDetails_ComponentType {
	p := new(FunctionDetails_ComponentType)
	*p = x
	return p
}

func (x FunctionDetails_ComponentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FunctionDetails_ComponentType) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[6].Descriptor()
}

func (FunctionDetails_ComponentType) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[6]
}

func (x FunctionDetails_ComponentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FunctionDetails_ComponentType.Descriptor instead.
func (FunctionDetails_ComponentType) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{2, 1}
}

type CryptoSpec_FailureAction int32

const (
	CryptoSpec_FAIL    CryptoSpec_FailureAction = 0
	CryptoSpec_DISCARD CryptoSpec_FailureAction = 1
	CryptoSpec_CONSUME CryptoSpec_FailureAction = 2
	CryptoSpec_SEND    CryptoSpec_FailureAction = 10
)

// Enum value maps for CryptoSpec_FailureAction.
var (
	CryptoSpec_FailureAction_name = map[int32]string{
		0:  "FAIL",
		1:  "DISCARD",
		2:  "CONSUME",
		10: "SEND",
	}
	CryptoSpec_FailureAction_value = map[string]int32{
		"FAIL":    0,
		"DISCARD": 1,
		"CONSUME": 2,
		"SEND":    10,
	}
)

func (x CryptoSpec_FailureAction) Enum() *CryptoSpec_FailureAction {
	p := new(CryptoSpec_FailureAction)
	*p = x
	return p
}

func (x CryptoSpec_FailureAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CryptoSpec_FailureAction) Descriptor() protoreflect.EnumDescriptor {
	return file_Function_proto_enumTypes[7].Descriptor()
}

func (CryptoSpec_FailureAction) Type() protoreflect.EnumType {
	return &file_Function_proto_enumTypes[7]
}

func (x CryptoSpec_FailureAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CryptoSpec_FailureAction.Descriptor instead.
func (CryptoSpec_FailureAction) EnumDescriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{5, 0}
}

type Resources struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           float64                `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Ram           int64                  `protobuf:"varint,2,opt,name=ram,proto3" json:"ram,omitempty"`
	Disk          int64                  `protobuf:"varint,3,opt,name=disk,proto3" json:"disk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_Function_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{0}
}

func (x *Resources) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *Resources) GetRam() int64 {
	if x != nil {
		return x.Ram
	}
	return 0
}

func (x *Resources) GetDisk() int64 {
	if x != nil {
		return x.Disk
	}
	return 0
}

type RetryDetails struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MaxMessageRetries int32                  `protobuf:"varint,1,opt,name=maxMessageRetries,proto3" json:"maxMessageRetries,omitempty"`
	DeadLetterTopic   string                 `protobuf:"bytes,2,opt,name=deadLetterTopic,proto3" json:"deadLetterTopic,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RetryDetails) Reset() {
	*x = RetryDetails{}
	mi := &file_Function_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryDetails) ProtoMessage() {}

func (x *RetryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryDetails.ProtoReflect.Descriptor instead.
func (*RetryDetails) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{1}
}

func (x *RetryDetails) GetMaxMessageRetries() int32 {
	if x != nil {
		return x.MaxMessageRetries
	}
	return 0
}

func (x *RetryDetails) GetDeadLetterTopic() string {
	if x != nil {
		return x.DeadLetterTopic
	}
	return ""
}

type FunctionDetails struct {
	state                protoimpl.MessageState  `protogen:"open.v1"`
	Tenant               string                  `protobuf:"bytes,1,opt,name=tenant,proto3" json:"tenant,omitempty"`
	Namespace            string                  `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                 string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ClassName            string                  `protobuf:"bytes,4,opt,name=className,proto3" json:"className,omitempty"`
	LogTopic             string                  `protobuf:"bytes,5,opt,name=logTopic,proto3" json:"logTopic,omitempty"`
	ProcessingGuarantees ProcessingGuarantees    `protobuf:"varint,6,opt,name=processingGuarantees,proto3,enum=proto.ProcessingGuarantees" json:"processingGuarantees,omitempty"`
	UserConfig           string                  `protobuf:"bytes,7,opt,name=userConfig,proto3" json:"userConfig,omitempty"`
	SecretsMap           string                  `protobuf:"bytes,16,opt,name=secretsMap,proto3" json:"secretsMap,omitempty"`
	Runtime              FunctionDetails_Runtime `protobuf:"varint,8,opt,name=runtime,proto3,enum=proto.FunctionDetails_Runtime" json:"runtime,omitempty"`
	// Deprecated since, see https://github.com/apache/pulsar/issues/15560
	//
	// Deprecated: Marked as deprecated in Function.proto.
	AutoAck              bool                          `protobuf:"varint,9,opt,name=autoAck,proto3" json:"autoAck,omitempty"`
	Parallelism          int32                         `protobuf:"varint,10,opt,name=parallelism,proto3" json:"parallelism,omitempty"`
	Source               *SourceSpec                   `protobuf:"bytes,11,opt,name=source,proto3" json:"source,omitempty"`
	Sink                 *SinkSpec                     `protobuf:"bytes,12,opt,name=sink,proto3" json:"sink,omitempty"`
	Resources            *Resources                    `protobuf:"bytes,13,opt,name=resources,proto3" json:"resources,omitempty"`
	PackageUrl           string                        `protobuf:"bytes,14,opt,name=packageUrl,proto3" json:"packageUrl,omitempty"` //present only if function submitted with package-url
	RetryDetails         *RetryDetails                 `protobuf:"bytes,15,opt,name=retryDetails,proto3" json:"retryDetails,omitempty"`
	RuntimeFlags         string                        `protobuf:"bytes,17,opt,name=runtimeFlags,proto3" json:"runtimeFlags,omitempty"`
	ComponentType        FunctionDetails_ComponentType `protobuf:"varint,18,opt,name=componentType,proto3,enum=proto.FunctionDetails_ComponentType" json:"componentType,omitempty"`
	CustomRuntimeOptions string                        `protobuf:"bytes,19,opt,name=customRuntimeOptions,proto3" json:"customRuntimeOptions,omitempty"`
	// If specified, this will refer to an archive that is
	// already present in the server
	Builtin              string               `protobuf:"bytes,20,opt,name=builtin,proto3" json:"builtin,omitempty"`
	RetainOrdering       bool                 `protobuf:"varint,21,opt,name=retainOrdering,proto3" json:"retainOrdering,omitempty"`
	RetainKeyOrdering    bool                 `protobuf:"varint,22,opt,name=retainKeyOrdering,proto3" json:"retainKeyOrdering,omitempty"`
	SubscriptionPosition SubscriptionPosition `protobuf:"varint,23,opt,name=subscriptionPosition,proto3,enum=proto.SubscriptionPosition" json:"subscriptionPosition,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FunctionDetails) Reset() {
	*x = FunctionDetails{}
	mi := &file_Function_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionDetails) ProtoMessage() {}

func (x *FunctionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionDetails.ProtoReflect.Descriptor instead.
func (*FunctionDetails) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{2}
}

func (x *FunctionDetails) GetTenant() string {
	if x != nil {
		return x.Tenant
	}
	return ""
}

func (x *FunctionDetails) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *FunctionDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FunctionDetails) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *FunctionDetails) GetLogTopic() string {
	if x != nil {
		return x.LogTopic
	}
	return ""
}

func (x *FunctionDetails) GetProcessingGuarantees() ProcessingGuarantees {
	if x != nil {
		return x.ProcessingGuarantees
	}
	return ProcessingGuarantees_ATLEAST_ONCE
}

func (x *FunctionDetails) GetUserConfig() string {
	if x != nil {
		return x.UserConfig
	}
	return ""
}

func (x *FunctionDetails) GetSecretsMap() string {
	if x != nil {
		return x.SecretsMap
	}
	return ""
}

func (x *FunctionDetails) GetRuntime() FunctionDetails_Runtime {
	if x != nil {
		return x.Runtime
	}
	return FunctionDetails_JAVA
}

// Deprecated: Marked as deprecated in Function.proto.
func (x *FunctionDetails) GetAutoAck() bool {
	if x != nil {
		return x.AutoAck
	}
	return false
}

func (x *FunctionDetails) GetParallelism() int32 {
	if x != nil {
		return x.Parallelism
	}
	return 0
}

func (x *FunctionDetails) GetSource() *SourceSpec {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *FunctionDetails) GetSink() *SinkSpec {
	if x != nil {
		return x.Sink
	}
	return nil
}

func (x *FunctionDetails) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *FunctionDetails) GetPackageUrl() string {
	if x != nil {
		return x.PackageUrl
	}
	return ""
}

func (x *FunctionDetails) GetRetryDetails() *RetryDetails {
	if x != nil {
		return x.RetryDetails
	}
	return nil
}

func (x *FunctionDetails) GetRuntimeFlags() string {
	if x != nil {
		return x.RuntimeFlags
	}
	return ""
}

func (x *FunctionDetails) GetComponentType() FunctionDetails_ComponentType {
	if x != nil {
		return x.ComponentType
	}
	return FunctionDetails_UNKNOWN
}

func (x *FunctionDetails) GetCustomRuntimeOptions() string {
	if x != nil {
		return x.CustomRuntimeOptions
	}
	return ""
}

func (x *FunctionDetails) GetBuiltin() string {
	if x != nil {
		return x.Builtin
	}
	return ""
}

func (x *FunctionDetails) GetRetainOrdering() bool {
	if x != nil {
		return x.RetainOrdering
	}
	return false
}

func (x *FunctionDetails) GetRetainKeyOrdering() bool {
	if x != nil {
		return x.RetainKeyOrdering
	}
	return false
}

func (x *FunctionDetails) GetSubscriptionPosition() SubscriptionPosition {
	if x != nil {
		return x.SubscriptionPosition
	}
	return SubscriptionPosition_LATEST
}

type ConsumerSpec struct {
	state              protoimpl.MessageState          `protogen:"open.v1"`
	SchemaType         string                          `protobuf:"bytes,1,opt,name=schemaType,proto3" json:"schemaType,omitempty"`
	SerdeClassName     string                          `protobuf:"bytes,2,opt,name=serdeClassName,proto3" json:"serdeClassName,omitempty"`
	IsRegexPattern     bool                            `protobuf:"varint,3,opt,name=isRegexPattern,proto3" json:"isRegexPattern,omitempty"`
	ReceiverQueueSize  *ConsumerSpec_ReceiverQueueSize `protobuf:"bytes,4,opt,name=receiverQueueSize,proto3" json:"receiverQueueSize,omitempty"`
	SchemaProperties   map[string]string               `protobuf:"bytes,5,rep,name=schemaProperties,proto3" json:"schemaProperties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ConsumerProperties map[string]string               `protobuf:"bytes,6,rep,name=consumerProperties,proto3" json:"consumerProperties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CryptoSpec         *CryptoSpec                     `protobuf:"bytes,7,opt,name=cryptoSpec,proto3" json:"cryptoSpec,omitempty"`
	PoolMessages       bool                            `protobuf:"varint,8,opt,name=poolMessages,proto3" json:"poolMessages,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ConsumerSpec) Reset() {
	*x = ConsumerSpec{}
	mi := &file_Function_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerSpec) ProtoMessage() {}

func (x *ConsumerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerSpec.ProtoReflect.Descriptor instead.
func (*ConsumerSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{3}
}

func (x *ConsumerSpec) GetSchemaType() string {
	if x != nil {
		return x.SchemaType
	}
	return ""
}

func (x *ConsumerSpec) GetSerdeClassName() string {
	if x != nil {
		return x.SerdeClassName
	}
	return ""
}

func (x *ConsumerSpec) GetIsRegexPattern() bool {
	if x != nil {
		return x.IsRegexPattern
	}
	return false
}

func (x *ConsumerSpec) GetReceiverQueueSize() *ConsumerSpec_ReceiverQueueSize {
	if x != nil {
		return x.ReceiverQueueSize
	}
	return nil
}

func (x *ConsumerSpec) GetSchemaProperties() map[string]string {
	if x != nil {
		return x.SchemaProperties
	}
	return nil
}

func (x *ConsumerSpec) GetConsumerProperties() map[string]string {
	if x != nil {
		return x.ConsumerProperties
	}
	return nil
}

func (x *ConsumerSpec) GetCryptoSpec() *CryptoSpec {
	if x != nil {
		return x.CryptoSpec
	}
	return nil
}

func (x *ConsumerSpec) GetPoolMessages() bool {
	if x != nil {
		return x.PoolMessages
	}
	return false
}

type ProducerSpec struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	MaxPendingMessages                 int32                  `protobuf:"varint,1,opt,name=maxPendingMessages,proto3" json:"maxPendingMessages,omitempty"`
	MaxPendingMessagesAcrossPartitions int32                  `protobuf:"varint,2,opt,name=maxPendingMessagesAcrossPartitions,proto3" json:"maxPendingMessagesAcrossPartitions,omitempty"`
	UseThreadLocalProducers            bool                   `protobuf:"varint,3,opt,name=useThreadLocalProducers,proto3" json:"useThreadLocalProducers,omitempty"`
	CryptoSpec                         *CryptoSpec            `protobuf:"bytes,4,opt,name=cryptoSpec,proto3" json:"cryptoSpec,omitempty"`
	BatchBuilder                       string                 `protobuf:"bytes,5,opt,name=batchBuilder,proto3" json:"batchBuilder,omitempty"`
	CompressionType                    CompressionType        `protobuf:"varint,6,opt,name=compressionType,proto3,enum=proto.CompressionType" json:"compressionType,omitempty"`
	BatchingSpec                       *BatchingSpec          `protobuf:"bytes,7,opt,name=batchingSpec,proto3" json:"batchingSpec,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ProducerSpec) Reset() {
	*x = ProducerSpec{}
	mi := &file_Function_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProducerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerSpec) ProtoMessage() {}

func (x *ProducerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerSpec.ProtoReflect.Descriptor instead.
func (*ProducerSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{4}
}

func (x *ProducerSpec) GetMaxPendingMessages() int32 {
	if x != nil {
		return x.MaxPendingMessages
	}
	return 0
}

func (x *ProducerSpec) GetMaxPendingMessagesAcrossPartitions() int32 {
	if x != nil {
		return x.MaxPendingMessagesAcrossPartitions
	}
	return 0
}

func (x *ProducerSpec) GetUseThreadLocalProducers() bool {
	if x != nil {
		return x.UseThreadLocalProducers
	}
	return false
}

func (x *ProducerSpec) GetCryptoSpec() *CryptoSpec {
	if x != nil {
		return x.CryptoSpec
	}
	return nil
}

func (x *ProducerSpec) GetBatchBuilder() string {
	if x != nil {
		return x.BatchBuilder
	}
	return ""
}

func (x *ProducerSpec) GetCompressionType() CompressionType {
	if x != nil {
		return x.CompressionType
	}
	return CompressionType_LZ4
}

func (x *ProducerSpec) GetBatchingSpec() *BatchingSpec {
	if x != nil {
		return x.BatchingSpec
	}
	return nil
}

type CryptoSpec struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	CryptoKeyReaderClassName string                 `protobuf:"bytes,1,opt,name=cryptoKeyReaderClassName,proto3" json:"cryptoKeyReaderClassName,omitempty"`
	CryptoKeyReaderConfig    string                 `protobuf:"bytes,2,opt,name=cryptoKeyReaderConfig,proto3" json:"cryptoKeyReaderConfig,omitempty"`
	// key names used by producer to encrypt data
	ProducerEncryptionKeyName []string `protobuf:"bytes,3,rep,name=producerEncryptionKeyName,proto3" json:"producerEncryptionKeyName,omitempty"`
	// define the action if producer fail to encrypt data
	// one of FAIL, SEND
	ProducerCryptoFailureAction CryptoSpec_FailureAction `protobuf:"varint,4,opt,name=producerCryptoFailureAction,proto3,enum=proto.CryptoSpec_FailureAction" json:"producerCryptoFailureAction,omitempty"`
	// define the action if consumer fail to decrypt data
	// one of FAIL, DISCARD, CONSUME
	ConsumerCryptoFailureAction CryptoSpec_FailureAction `protobuf:"varint,5,opt,name=consumerCryptoFailureAction,proto3,enum=proto.CryptoSpec_FailureAction" json:"consumerCryptoFailureAction,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *CryptoSpec) Reset() {
	*x = CryptoSpec{}
	mi := &file_Function_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CryptoSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoSpec) ProtoMessage() {}

func (x *CryptoSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoSpec.ProtoReflect.Descriptor instead.
func (*CryptoSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{5}
}

func (x *CryptoSpec) GetCryptoKeyReaderClassName() string {
	if x != nil {
		return x.CryptoKeyReaderClassName
	}
	return ""
}

func (x *CryptoSpec) GetCryptoKeyReaderConfig() string {
	if x != nil {
		return x.CryptoKeyReaderConfig
	}
	return ""
}

func (x *CryptoSpec) GetProducerEncryptionKeyName() []string {
	if x != nil {
		return x.ProducerEncryptionKeyName
	}
	return nil
}

func (x *CryptoSpec) GetProducerCryptoFailureAction() CryptoSpec_FailureAction {
	if x != nil {
		return x.ProducerCryptoFailureAction
	}
	return CryptoSpec_FAIL
}

func (x *CryptoSpec) GetConsumerCryptoFailureAction() CryptoSpec_FailureAction {
	if x != nil {
		return x.ConsumerCryptoFailureAction
	}
	return CryptoSpec_FAIL
}

type BatchingSpec struct {
	state                                            protoimpl.MessageState `protogen:"open.v1"`
	Enabled                                          bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	BatchingMaxPublishDelayMs                        int32                  `protobuf:"varint,2,opt,name=batchingMaxPublishDelayMs,proto3" json:"batchingMaxPublishDelayMs,omitempty"`
	RoundRobinRouterBatchingPartitionSwitchFrequency int32                  `protobuf:"varint,3,opt,name=roundRobinRouterBatchingPartitionSwitchFrequency,proto3" json:"roundRobinRouterBatchingPartitionSwitchFrequency,omitempty"`
	BatchingMaxMessages                              int32                  `protobuf:"varint,4,opt,name=batchingMaxMessages,proto3" json:"batchingMaxMessages,omitempty"`
	BatchingMaxBytes                                 int32                  `protobuf:"varint,5,opt,name=batchingMaxBytes,proto3" json:"batchingMaxBytes,omitempty"`
	BatchBuilder                                     string                 `protobuf:"bytes,6,opt,name=batchBuilder,proto3" json:"batchBuilder,omitempty"`
	unknownFields                                    protoimpl.UnknownFields
	sizeCache                                        protoimpl.SizeCache
}

func (x *BatchingSpec) Reset() {
	*x = BatchingSpec{}
	mi := &file_Function_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchingSpec) ProtoMessage() {}

func (x *BatchingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchingSpec.ProtoReflect.Descriptor instead.
func (*BatchingSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{6}
}

func (x *BatchingSpec) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *BatchingSpec) GetBatchingMaxPublishDelayMs() int32 {
	if x != nil {
		return x.BatchingMaxPublishDelayMs
	}
	return 0
}

func (x *BatchingSpec) GetRoundRobinRouterBatchingPartitionSwitchFrequency() int32 {
	if x != nil {
		return x.RoundRobinRouterBatchingPartitionSwitchFrequency
	}
	return 0
}

func (x *BatchingSpec) GetBatchingMaxMessages() int32 {
	if x != nil {
		return x.BatchingMaxMessages
	}
	return 0
}

func (x *BatchingSpec) GetBatchingMaxBytes() int32 {
	if x != nil {
		return x.BatchingMaxBytes
	}
	return 0
}

func (x *BatchingSpec) GetBatchBuilder() string {
	if x != nil {
		return x.BatchBuilder
	}
	return ""
}

type SourceSpec struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ClassName string                 `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`
	// map in json format
	Configs       string `protobuf:"bytes,2,opt,name=configs,proto3" json:"configs,omitempty"`
	TypeClassName string `protobuf:"bytes,5,opt,name=typeClassName,proto3" json:"typeClassName,omitempty"`
	// configs used only when source feeds into functions
	SubscriptionType SubscriptionType `protobuf:"varint,3,opt,name=subscriptionType,proto3,enum=proto.SubscriptionType" json:"subscriptionType,omitempty"`
	// @deprecated -- use topicsToSchema
	//
	// Deprecated: Marked as deprecated in Function.proto.
	TopicsToSerDeClassName map[string]string `protobuf:"bytes,4,rep,name=topicsToSerDeClassName,proto3" json:"topicsToSerDeClassName,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// *
	InputSpecs map[string]*ConsumerSpec `protobuf:"bytes,10,rep,name=inputSpecs,proto3" json:"inputSpecs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TimeoutMs  uint64                   `protobuf:"varint,6,opt,name=timeoutMs,proto3" json:"timeoutMs,omitempty"`
	// Deprecated: Marked as deprecated in Function.proto.
	TopicsPattern string `protobuf:"bytes,7,opt,name=topicsPattern,proto3" json:"topicsPattern,omitempty"`
	// If specified, this will refer to an archive that is
	// already present in the server
	Builtin                      string               `protobuf:"bytes,8,opt,name=builtin,proto3" json:"builtin,omitempty"`
	SubscriptionName             string               `protobuf:"bytes,9,opt,name=subscriptionName,proto3" json:"subscriptionName,omitempty"`
	CleanupSubscription          bool                 `protobuf:"varint,11,opt,name=cleanupSubscription,proto3" json:"cleanupSubscription,omitempty"`
	SubscriptionPosition         SubscriptionPosition `protobuf:"varint,12,opt,name=subscriptionPosition,proto3,enum=proto.SubscriptionPosition" json:"subscriptionPosition,omitempty"`
	NegativeAckRedeliveryDelayMs uint64               `protobuf:"varint,13,opt,name=negativeAckRedeliveryDelayMs,proto3" json:"negativeAckRedeliveryDelayMs,omitempty"`
	SkipToLatest                 bool                 `protobuf:"varint,14,opt,name=skipToLatest,proto3" json:"skipToLatest,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *SourceSpec) Reset() {
	*x = SourceSpec{}
	mi := &file_Function_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceSpec) ProtoMessage() {}

func (x *SourceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceSpec.ProtoReflect.Descriptor instead.
func (*SourceSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{7}
}

func (x *SourceSpec) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *SourceSpec) GetConfigs() string {
	if x != nil {
		return x.Configs
	}
	return ""
}

func (x *SourceSpec) GetTypeClassName() string {
	if x != nil {
		return x.TypeClassName
	}
	return ""
}

func (x *SourceSpec) GetSubscriptionType() SubscriptionType {
	if x != nil {
		return x.SubscriptionType
	}
	return SubscriptionType_SHARED
}

// Deprecated: Marked as deprecated in Function.proto.
func (x *SourceSpec) GetTopicsToSerDeClassName() map[string]string {
	if x != nil {
		return x.TopicsToSerDeClassName
	}
	return nil
}

func (x *SourceSpec) GetInputSpecs() map[string]*ConsumerSpec {
	if x != nil {
		return x.InputSpecs
	}
	return nil
}

func (x *SourceSpec) GetTimeoutMs() uint64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

// Deprecated: Marked as deprecated in Function.proto.
func (x *SourceSpec) GetTopicsPattern() string {
	if x != nil {
		return x.TopicsPattern
	}
	return ""
}

func (x *SourceSpec) GetBuiltin() string {
	if x != nil {
		return x.Builtin
	}
	return ""
}

func (x *SourceSpec) GetSubscriptionName() string {
	if x != nil {
		return x.SubscriptionName
	}
	return ""
}

func (x *SourceSpec) GetCleanupSubscription() bool {
	if x != nil {
		return x.CleanupSubscription
	}
	return false
}

func (x *SourceSpec) GetSubscriptionPosition() SubscriptionPosition {
	if x != nil {
		return x.SubscriptionPosition
	}
	return SubscriptionPosition_LATEST
}

func (x *SourceSpec) GetNegativeAckRedeliveryDelayMs() uint64 {
	if x != nil {
		return x.NegativeAckRedeliveryDelayMs
	}
	return 0
}

func (x *SourceSpec) GetSkipToLatest() bool {
	if x != nil {
		return x.SkipToLatest
	}
	return false
}

type SinkSpec struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ClassName string                 `protobuf:"bytes,1,opt,name=className,proto3" json:"className,omitempty"`
	// map in json format
	Configs       string `protobuf:"bytes,2,opt,name=configs,proto3" json:"configs,omitempty"`
	TypeClassName string `protobuf:"bytes,5,opt,name=typeClassName,proto3" json:"typeClassName,omitempty"`
	// configs used only when functions output to sink
	Topic          string        `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	ProducerSpec   *ProducerSpec `protobuf:"bytes,11,opt,name=producerSpec,proto3" json:"producerSpec,omitempty"`
	SerDeClassName string        `protobuf:"bytes,4,opt,name=serDeClassName,proto3" json:"serDeClassName,omitempty"`
	// If specified, this will refer to an archive that is
	// already present in the server
	Builtin string `protobuf:"bytes,6,opt,name=builtin,proto3" json:"builtin,omitempty"`
	// *
	// Builtin schema type or custom schema class name
	SchemaType                   string            `protobuf:"bytes,7,opt,name=schemaType,proto3" json:"schemaType,omitempty"`
	ForwardSourceMessageProperty bool              `protobuf:"varint,8,opt,name=forwardSourceMessageProperty,proto3" json:"forwardSourceMessageProperty,omitempty"`
	SchemaProperties             map[string]string `protobuf:"bytes,9,rep,name=schemaProperties,proto3" json:"schemaProperties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ConsumerProperties           map[string]string `protobuf:"bytes,10,rep,name=consumerProperties,proto3" json:"consumerProperties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *SinkSpec) Reset() {
	*x = SinkSpec{}
	mi := &file_Function_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SinkSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinkSpec) ProtoMessage() {}

func (x *SinkSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinkSpec.ProtoReflect.Descriptor instead.
func (*SinkSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{8}
}

func (x *SinkSpec) GetClassName() string {
	if x != nil {
		return x.ClassName
	}
	return ""
}

func (x *SinkSpec) GetConfigs() string {
	if x != nil {
		return x.Configs
	}
	return ""
}

func (x *SinkSpec) GetTypeClassName() string {
	if x != nil {
		return x.TypeClassName
	}
	return ""
}

func (x *SinkSpec) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SinkSpec) GetProducerSpec() *ProducerSpec {
	if x != nil {
		return x.ProducerSpec
	}
	return nil
}

func (x *SinkSpec) GetSerDeClassName() string {
	if x != nil {
		return x.SerDeClassName
	}
	return ""
}

func (x *SinkSpec) GetBuiltin() string {
	if x != nil {
		return x.Builtin
	}
	return ""
}

func (x *SinkSpec) GetSchemaType() string {
	if x != nil {
		return x.SchemaType
	}
	return ""
}

func (x *SinkSpec) GetForwardSourceMessageProperty() bool {
	if x != nil {
		return x.ForwardSourceMessageProperty
	}
	return false
}

func (x *SinkSpec) GetSchemaProperties() map[string]string {
	if x != nil {
		return x.SchemaProperties
	}
	return nil
}

func (x *SinkSpec) GetConsumerProperties() map[string]string {
	if x != nil {
		return x.ConsumerProperties
	}
	return nil
}

type PackageLocationMetaData struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	PackagePath      string                 `protobuf:"bytes,1,opt,name=packagePath,proto3" json:"packagePath,omitempty"`
	OriginalFileName string                 `protobuf:"bytes,2,opt,name=originalFileName,proto3" json:"originalFileName,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PackageLocationMetaData) Reset() {
	*x = PackageLocationMetaData{}
	mi := &file_Function_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageLocationMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageLocationMetaData) ProtoMessage() {}

func (x *PackageLocationMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageLocationMetaData.ProtoReflect.Descriptor instead.
func (*PackageLocationMetaData) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{9}
}

func (x *PackageLocationMetaData) GetPackagePath() string {
	if x != nil {
		return x.PackagePath
	}
	return ""
}

func (x *PackageLocationMetaData) GetOriginalFileName() string {
	if x != nil {
		return x.OriginalFileName
	}
	return ""
}

type FunctionMetaData struct {
	state                            protoimpl.MessageState      `protogen:"open.v1"`
	FunctionDetails                  *FunctionDetails            `protobuf:"bytes,1,opt,name=functionDetails,proto3" json:"functionDetails,omitempty"`
	PackageLocation                  *PackageLocationMetaData    `protobuf:"bytes,2,opt,name=packageLocation,proto3" json:"packageLocation,omitempty"`
	Version                          uint64                      `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	CreateTime                       uint64                      `protobuf:"varint,4,opt,name=createTime,proto3" json:"createTime,omitempty"`
	InstanceStates                   map[int32]FunctionState     `protobuf:"bytes,5,rep,name=instanceStates,proto3" json:"instanceStates,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=proto.FunctionState"`
	FunctionAuthSpec                 *FunctionAuthenticationSpec `protobuf:"bytes,6,opt,name=functionAuthSpec,proto3" json:"functionAuthSpec,omitempty"`
	TransformFunctionPackageLocation *PackageLocationMetaData    `protobuf:"bytes,7,opt,name=transformFunctionPackageLocation,proto3" json:"transformFunctionPackageLocation,omitempty"`
	unknownFields                    protoimpl.UnknownFields
	sizeCache                        protoimpl.SizeCache
}

func (x *FunctionMetaData) Reset() {
	*x = FunctionMetaData{}
	mi := &file_Function_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionMetaData) ProtoMessage() {}

func (x *FunctionMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionMetaData.ProtoReflect.Descriptor instead.
func (*FunctionMetaData) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{10}
}

func (x *FunctionMetaData) GetFunctionDetails() *FunctionDetails {
	if x != nil {
		return x.FunctionDetails
	}
	return nil
}

func (x *FunctionMetaData) GetPackageLocation() *PackageLocationMetaData {
	if x != nil {
		return x.PackageLocation
	}
	return nil
}

func (x *FunctionMetaData) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *FunctionMetaData) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *FunctionMetaData) GetInstanceStates() map[int32]FunctionState {
	if x != nil {
		return x.InstanceStates
	}
	return nil
}

func (x *FunctionMetaData) GetFunctionAuthSpec() *FunctionAuthenticationSpec {
	if x != nil {
		return x.FunctionAuthSpec
	}
	return nil
}

func (x *FunctionMetaData) GetTransformFunctionPackageLocation() *PackageLocationMetaData {
	if x != nil {
		return x.TransformFunctionPackageLocation
	}
	return nil
}

type FunctionAuthenticationSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// *
	// function authentication related data that the function authentication provider
	// needs to cache/distribute to all workers support function authentication.
	// Depending on the function authentication provider implementation, this can be the actual auth credentials
	// or a pointer to the auth credentials that this function should use
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// *
	// classname of the function auth provicer this data is relevant to
	Provider      string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FunctionAuthenticationSpec) Reset() {
	*x = FunctionAuthenticationSpec{}
	mi := &file_Function_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FunctionAuthenticationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FunctionAuthenticationSpec) ProtoMessage() {}

func (x *FunctionAuthenticationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FunctionAuthenticationSpec.ProtoReflect.Descriptor instead.
func (*FunctionAuthenticationSpec) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{11}
}

func (x *FunctionAuthenticationSpec) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FunctionAuthenticationSpec) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type Instance struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	FunctionMetaData *FunctionMetaData      `protobuf:"bytes,1,opt,name=functionMetaData,proto3" json:"functionMetaData,omitempty"`
	InstanceId       int32                  `protobuf:"varint,2,opt,name=instanceId,proto3" json:"instanceId,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Instance) Reset() {
	*x = Instance{}
	mi := &file_Function_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instance) ProtoMessage() {}

func (x *Instance) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instance.ProtoReflect.Descriptor instead.
func (*Instance) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{12}
}

func (x *Instance) GetFunctionMetaData() *FunctionMetaData {
	if x != nil {
		return x.FunctionMetaData
	}
	return nil
}

func (x *Instance) GetInstanceId() int32 {
	if x != nil {
		return x.InstanceId
	}
	return 0
}

type Assignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instance      *Instance              `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	WorkerId      string                 `protobuf:"bytes,2,opt,name=workerId,proto3" json:"workerId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Assignment) Reset() {
	*x = Assignment{}
	mi := &file_Function_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignment) ProtoMessage() {}

func (x *Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignment.ProtoReflect.Descriptor instead.
func (*Assignment) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{13}
}

func (x *Assignment) GetInstance() *Instance {
	if x != nil {
		return x.Instance
	}
	return nil
}

func (x *Assignment) GetWorkerId() string {
	if x != nil {
		return x.WorkerId
	}
	return ""
}

type ConsumerSpec_ReceiverQueueSize struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         int32                  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsumerSpec_ReceiverQueueSize) Reset() {
	*x = ConsumerSpec_ReceiverQueueSize{}
	mi := &file_Function_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsumerSpec_ReceiverQueueSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerSpec_ReceiverQueueSize) ProtoMessage() {}

func (x *ConsumerSpec_ReceiverQueueSize) ProtoReflect() protoreflect.Message {
	mi := &file_Function_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerSpec_ReceiverQueueSize.ProtoReflect.Descriptor instead.
func (*ConsumerSpec_ReceiverQueueSize) Descriptor() ([]byte, []int) {
	return file_Function_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ConsumerSpec_ReceiverQueueSize) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_Function_proto protoreflect.FileDescriptor

const file_Function_proto_rawDesc = "" +
	"\n" +
	"\x0eFunction.proto\x12\x05proto\"C\n" +
	"\tResources\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\x01R\x03cpu\x12\x10\n" +
	"\x03ram\x18\x02 \x01(\x03R\x03ram\x12\x12\n" +
	"\x04disk\x18\x03 \x01(\x03R\x04disk\"f\n" +
	"\fRetryDetails\x12,\n" +
	"\x11maxMessageRetries\x18\x01 \x01(\x05R\x11maxMessageRetries\x12(\n" +
	"\x0fdeadLetterTopic\x18\x02 \x01(\tR\x0fdeadLetterTopic\"\xc9\b\n" +
	"\x0fFunctionDetails\x12\x16\n" +
	"\x06tenant\x18\x01 \x01(\tR\x06tenant\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1c\n" +
	"\tclassName\x18\x04 \x01(\tR\tclassName\x12\x1a\n" +
	"\blogTopic\x18\x05 \x01(\tR\blogTopic\x12O\n" +
	"\x14processingGuarantees\x18\x06 \x01(\x0e2\x1b.proto.ProcessingGuaranteesR\x14processingGuarantees\x12\x1e\n" +
	"\n" +
	"userConfig\x18\a \x01(\tR\n" +
	"userConfig\x12\x1e\n" +
	"\n" +
	"secretsMap\x18\x10 \x01(\tR\n" +
	"secretsMap\x128\n" +
	"\aruntime\x18\b \x01(\x0e2\x1e.proto.FunctionDetails.RuntimeR\aruntime\x12\x1c\n" +
	"\aautoAck\x18\t \x01(\bB\x02\x18\x01R\aautoAck\x12 \n" +
	"\vparallelism\x18\n" +
	" \x01(\x05R\vparallelism\x12)\n" +
	"\x06source\x18\v \x01(\v2\x11.proto.SourceSpecR\x06source\x12#\n" +
	"\x04sink\x18\f \x01(\v2\x0f.proto.SinkSpecR\x04sink\x12.\n" +
	"\tresources\x18\r \x01(\v2\x10.proto.ResourcesR\tresources\x12\x1e\n" +
	"\n" +
	"packageUrl\x18\x0e \x01(\tR\n" +
	"packageUrl\x127\n" +
	"\fretryDetails\x18\x0f \x01(\v2\x13.proto.RetryDetailsR\fretryDetails\x12\"\n" +
	"\fruntimeFlags\x18\x11 \x01(\tR\fruntimeFlags\x12J\n" +
	"\rcomponentType\x18\x12 \x01(\x0e2$.proto.FunctionDetails.ComponentTypeR\rcomponentType\x122\n" +
	"\x14customRuntimeOptions\x18\x13 \x01(\tR\x14customRuntimeOptions\x12\x18\n" +
	"\abuiltin\x18\x14 \x01(\tR\abuiltin\x12&\n" +
	"\x0eretainOrdering\x18\x15 \x01(\bR\x0eretainOrdering\x12,\n" +
	"\x11retainKeyOrdering\x18\x16 \x01(\bR\x11retainKeyOrdering\x12O\n" +
	"\x14subscriptionPosition\x18\x17 \x01(\x0e2\x1b.proto.SubscriptionPositionR\x14subscriptionPosition\"'\n" +
	"\aRuntime\x12\b\n" +
	"\x04JAVA\x10\x00\x12\n" +
	"\n" +
	"\x06PYTHON\x10\x01\x12\x06\n" +
	"\x02GO\x10\x03\"@\n" +
	"\rComponentType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\f\n" +
	"\bFUNCTION\x10\x01\x12\n" +
	"\n" +
	"\x06SOURCE\x10\x02\x12\b\n" +
	"\x04SINK\x10\x03\"\x95\x05\n" +
	"\fConsumerSpec\x12\x1e\n" +
	"\n" +
	"schemaType\x18\x01 \x01(\tR\n" +
	"schemaType\x12&\n" +
	"\x0eserdeClassName\x18\x02 \x01(\tR\x0eserdeClassName\x12&\n" +
	"\x0eisRegexPattern\x18\x03 \x01(\bR\x0eisRegexPattern\x12S\n" +
	"\x11receiverQueueSize\x18\x04 \x01(\v2%.proto.ConsumerSpec.ReceiverQueueSizeR\x11receiverQueueSize\x12U\n" +
	"\x10schemaProperties\x18\x05 \x03(\v2).proto.ConsumerSpec.SchemaPropertiesEntryR\x10schemaProperties\x12[\n" +
	"\x12consumerProperties\x18\x06 \x03(\v2+.proto.ConsumerSpec.ConsumerPropertiesEntryR\x12consumerProperties\x121\n" +
	"\n" +
	"cryptoSpec\x18\a \x01(\v2\x11.proto.CryptoSpecR\n" +
	"cryptoSpec\x12\"\n" +
	"\fpoolMessages\x18\b \x01(\bR\fpoolMessages\x1a)\n" +
	"\x11ReceiverQueueSize\x12\x14\n" +
	"\x05value\x18\x01 \x01(\x05R\x05value\x1aC\n" +
	"\x15SchemaPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aE\n" +
	"\x17ConsumerPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9a\x03\n" +
	"\fProducerSpec\x12.\n" +
	"\x12maxPendingMessages\x18\x01 \x01(\x05R\x12maxPendingMessages\x12N\n" +
	"\"maxPendingMessagesAcrossPartitions\x18\x02 \x01(\x05R\"maxPendingMessagesAcrossPartitions\x128\n" +
	"\x17useThreadLocalProducers\x18\x03 \x01(\bR\x17useThreadLocalProducers\x121\n" +
	"\n" +
	"cryptoSpec\x18\x04 \x01(\v2\x11.proto.CryptoSpecR\n" +
	"cryptoSpec\x12\"\n" +
	"\fbatchBuilder\x18\x05 \x01(\tR\fbatchBuilder\x12@\n" +
	"\x0fcompressionType\x18\x06 \x01(\x0e2\x16.proto.CompressionTypeR\x0fcompressionType\x127\n" +
	"\fbatchingSpec\x18\a \x01(\v2\x13.proto.BatchingSpecR\fbatchingSpec\"\xc1\x03\n" +
	"\n" +
	"CryptoSpec\x12:\n" +
	"\x18cryptoKeyReaderClassName\x18\x01 \x01(\tR\x18cryptoKeyReaderClassName\x124\n" +
	"\x15cryptoKeyReaderConfig\x18\x02 \x01(\tR\x15cryptoKeyReaderConfig\x12<\n" +
	"\x19producerEncryptionKeyName\x18\x03 \x03(\tR\x19producerEncryptionKeyName\x12a\n" +
	"\x1bproducerCryptoFailureAction\x18\x04 \x01(\x0e2\x1f.proto.CryptoSpec.FailureActionR\x1bproducerCryptoFailureAction\x12a\n" +
	"\x1bconsumerCryptoFailureAction\x18\x05 \x01(\x0e2\x1f.proto.CryptoSpec.FailureActionR\x1bconsumerCryptoFailureAction\"=\n" +
	"\rFailureAction\x12\b\n" +
	"\x04FAIL\x10\x00\x12\v\n" +
	"\aDISCARD\x10\x01\x12\v\n" +
	"\aCONSUME\x10\x02\x12\b\n" +
	"\x04SEND\x10\n" +
	"\"\xd4\x02\n" +
	"\fBatchingSpec\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12<\n" +
	"\x19batchingMaxPublishDelayMs\x18\x02 \x01(\x05R\x19batchingMaxPublishDelayMs\x12j\n" +
	"0roundRobinRouterBatchingPartitionSwitchFrequency\x18\x03 \x01(\x05R0roundRobinRouterBatchingPartitionSwitchFrequency\x120\n" +
	"\x13batchingMaxMessages\x18\x04 \x01(\x05R\x13batchingMaxMessages\x12*\n" +
	"\x10batchingMaxBytes\x18\x05 \x01(\x05R\x10batchingMaxBytes\x12\"\n" +
	"\fbatchBuilder\x18\x06 \x01(\tR\fbatchBuilder\"\xf5\x06\n" +
	"\n" +
	"SourceSpec\x12\x1c\n" +
	"\tclassName\x18\x01 \x01(\tR\tclassName\x12\x18\n" +
	"\aconfigs\x18\x02 \x01(\tR\aconfigs\x12$\n" +
	"\rtypeClassName\x18\x05 \x01(\tR\rtypeClassName\x12C\n" +
	"\x10subscriptionType\x18\x03 \x01(\x0e2\x17.proto.SubscriptionTypeR\x10subscriptionType\x12i\n" +
	"\x16topicsToSerDeClassName\x18\x04 \x03(\v2-.proto.SourceSpec.TopicsToSerDeClassNameEntryB\x02\x18\x01R\x16topicsToSerDeClassName\x12A\n" +
	"\n" +
	"inputSpecs\x18\n" +
	" \x03(\v2!.proto.SourceSpec.InputSpecsEntryR\n" +
	"inputSpecs\x12\x1c\n" +
	"\ttimeoutMs\x18\x06 \x01(\x04R\ttimeoutMs\x12(\n" +
	"\rtopicsPattern\x18\a \x01(\tB\x02\x18\x01R\rtopicsPattern\x12\x18\n" +
	"\abuiltin\x18\b \x01(\tR\abuiltin\x12*\n" +
	"\x10subscriptionName\x18\t \x01(\tR\x10subscriptionName\x120\n" +
	"\x13cleanupSubscription\x18\v \x01(\bR\x13cleanupSubscription\x12O\n" +
	"\x14subscriptionPosition\x18\f \x01(\x0e2\x1b.proto.SubscriptionPositionR\x14subscriptionPosition\x12B\n" +
	"\x1cnegativeAckRedeliveryDelayMs\x18\r \x01(\x04R\x1cnegativeAckRedeliveryDelayMs\x12\"\n" +
	"\fskipToLatest\x18\x0e \x01(\bR\fskipToLatest\x1aI\n" +
	"\x1bTopicsToSerDeClassNameEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aR\n" +
	"\x0fInputSpecsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12)\n" +
	"\x05value\x18\x02 \x01(\v2\x13.proto.ConsumerSpecR\x05value:\x028\x01\"\x95\x05\n" +
	"\bSinkSpec\x12\x1c\n" +
	"\tclassName\x18\x01 \x01(\tR\tclassName\x12\x18\n" +
	"\aconfigs\x18\x02 \x01(\tR\aconfigs\x12$\n" +
	"\rtypeClassName\x18\x05 \x01(\tR\rtypeClassName\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\x127\n" +
	"\fproducerSpec\x18\v \x01(\v2\x13.proto.ProducerSpecR\fproducerSpec\x12&\n" +
	"\x0eserDeClassName\x18\x04 \x01(\tR\x0eserDeClassName\x12\x18\n" +
	"\abuiltin\x18\x06 \x01(\tR\abuiltin\x12\x1e\n" +
	"\n" +
	"schemaType\x18\a \x01(\tR\n" +
	"schemaType\x12B\n" +
	"\x1cforwardSourceMessageProperty\x18\b \x01(\bR\x1cforwardSourceMessageProperty\x12Q\n" +
	"\x10schemaProperties\x18\t \x03(\v2%.proto.SinkSpec.SchemaPropertiesEntryR\x10schemaProperties\x12W\n" +
	"\x12consumerProperties\x18\n" +
	" \x03(\v2'.proto.SinkSpec.ConsumerPropertiesEntryR\x12consumerProperties\x1aC\n" +
	"\x15SchemaPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aE\n" +
	"\x17ConsumerPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"g\n" +
	"\x17PackageLocationMetaData\x12 \n" +
	"\vpackagePath\x18\x01 \x01(\tR\vpackagePath\x12*\n" +
	"\x10originalFileName\x18\x02 \x01(\tR\x10originalFileName\"\xc1\x04\n" +
	"\x10FunctionMetaData\x12@\n" +
	"\x0ffunctionDetails\x18\x01 \x01(\v2\x16.proto.FunctionDetailsR\x0ffunctionDetails\x12H\n" +
	"\x0fpackageLocation\x18\x02 \x01(\v2\x1e.proto.PackageLocationMetaDataR\x0fpackageLocation\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x04R\aversion\x12\x1e\n" +
	"\n" +
	"createTime\x18\x04 \x01(\x04R\n" +
	"createTime\x12S\n" +
	"\x0einstanceStates\x18\x05 \x03(\v2+.proto.FunctionMetaData.InstanceStatesEntryR\x0einstanceStates\x12M\n" +
	"\x10functionAuthSpec\x18\x06 \x01(\v2!.proto.FunctionAuthenticationSpecR\x10functionAuthSpec\x12j\n" +
	" transformFunctionPackageLocation\x18\a \x01(\v2\x1e.proto.PackageLocationMetaDataR transformFunctionPackageLocation\x1aW\n" +
	"\x13InstanceStatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\x0e2\x14.proto.FunctionStateR\x05value:\x028\x01\"L\n" +
	"\x1aFunctionAuthenticationSpec\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\"o\n" +
	"\bInstance\x12C\n" +
	"\x10functionMetaData\x18\x01 \x01(\v2\x17.proto.FunctionMetaDataR\x10functionMetaData\x12\x1e\n" +
	"\n" +
	"instanceId\x18\x02 \x01(\x05R\n" +
	"instanceId\"U\n" +
	"\n" +
	"Assignment\x12+\n" +
	"\binstance\x18\x01 \x01(\v2\x0f.proto.InstanceR\binstance\x12\x1a\n" +
	"\bworkerId\x18\x02 \x01(\tR\bworkerId*[\n" +
	"\x14ProcessingGuarantees\x12\x10\n" +
	"\fATLEAST_ONCE\x10\x00\x12\x0f\n" +
	"\vATMOST_ONCE\x10\x01\x12\x14\n" +
	"\x10EFFECTIVELY_ONCE\x10\x02\x12\n" +
	"\n" +
	"\x06MANUAL\x10\x03*<\n" +
	"\x10SubscriptionType\x12\n" +
	"\n" +
	"\x06SHARED\x10\x00\x12\f\n" +
	"\bFAILOVER\x10\x01\x12\x0e\n" +
	"\n" +
	"KEY_SHARED\x10\x02*0\n" +
	"\x14SubscriptionPosition\x12\n" +
	"\n" +
	"\x06LATEST\x10\x00\x12\f\n" +
	"\bEARLIEST\x10\x01*D\n" +
	"\x0fCompressionType\x12\a\n" +
	"\x03LZ4\x10\x00\x12\b\n" +
	"\x04NONE\x10\x01\x12\b\n" +
	"\x04ZLIB\x10\x02\x12\b\n" +
	"\x04ZSTD\x10\x03\x12\n" +
	"\n" +
	"\x06SNAPPY\x10\x04*)\n" +
	"\rFunctionState\x12\v\n" +
	"\aRUNNING\x10\x00\x12\v\n" +
	"\aSTOPPED\x10\x01B@\n" +
	"!org.apache.pulsar.functions.protoB\bFunctionZ\x11controllers/protob\x06proto3"

var (
	file_Function_proto_rawDescOnce sync.Once
	file_Function_proto_rawDescData []byte
)

func file_Function_proto_rawDescGZIP() []byte {
	file_Function_proto_rawDescOnce.Do(func() {
		file_Function_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_Function_proto_rawDesc), len(file_Function_proto_rawDesc)))
	})
	return file_Function_proto_rawDescData
}

var file_Function_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_Function_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_Function_proto_goTypes = []any{
	(ProcessingGuarantees)(0),              // 0: proto.ProcessingGuarantees
	(SubscriptionType)(0),                  // 1: proto.SubscriptionType
	(SubscriptionPosition)(0),              // 2: proto.SubscriptionPosition
	(CompressionType)(0),                   // 3: proto.CompressionType
	(FunctionState)(0),                     // 4: proto.FunctionState
	(FunctionDetails_Runtime)(0),           // 5: proto.FunctionDetails.Runtime
	(FunctionDetails_ComponentType)(0),     // 6: proto.FunctionDetails.ComponentType
	(CryptoSpec_FailureAction)(0),          // 7: proto.CryptoSpec.FailureAction
	(*Resources)(nil),                      // 8: proto.Resources
	(*RetryDetails)(nil),                   // 9: proto.RetryDetails
	(*FunctionDetails)(nil),                // 10: proto.FunctionDetails
	(*ConsumerSpec)(nil),                   // 11: proto.ConsumerSpec
	(*ProducerSpec)(nil),                   // 12: proto.ProducerSpec
	(*CryptoSpec)(nil),                     // 13: proto.CryptoSpec
	(*BatchingSpec)(nil),                   // 14: proto.BatchingSpec
	(*SourceSpec)(nil),                     // 15: proto.SourceSpec
	(*SinkSpec)(nil),                       // 16: proto.SinkSpec
	(*PackageLocationMetaData)(nil),        // 17: proto.PackageLocationMetaData
	(*FunctionMetaData)(nil),               // 18: proto.FunctionMetaData
	(*FunctionAuthenticationSpec)(nil),     // 19: proto.FunctionAuthenticationSpec
	(*Instance)(nil),                       // 20: proto.Instance
	(*Assignment)(nil),                     // 21: proto.Assignment
	(*ConsumerSpec_ReceiverQueueSize)(nil), // 22: proto.ConsumerSpec.ReceiverQueueSize
	nil,                                    // 23: proto.ConsumerSpec.SchemaPropertiesEntry
	nil,                                    // 24: proto.ConsumerSpec.ConsumerPropertiesEntry
	nil,                                    // 25: proto.SourceSpec.TopicsToSerDeClassNameEntry
	nil,                                    // 26: proto.SourceSpec.InputSpecsEntry
	nil,                                    // 27: proto.SinkSpec.SchemaPropertiesEntry
	nil,                                    // 28: proto.SinkSpec.ConsumerPropertiesEntry
	nil,                                    // 29: proto.FunctionMetaData.InstanceStatesEntry
}
var file_Function_proto_depIdxs = []int32{
	0,  // 0: proto.FunctionDetails.processingGuarantees:type_name -> proto.ProcessingGuarantees
	5,  // 1: proto.FunctionDetails.runtime:type_name -> proto.FunctionDetails.Runtime
	15, // 2: proto.FunctionDetails.source:type_name -> proto.SourceSpec
	16, // 3: proto.FunctionDetails.sink:type_name -> proto.SinkSpec
	8,  // 4: proto.FunctionDetails.resources:type_name -> proto.Resources
	9,  // 5: proto.FunctionDetails.retryDetails:type_name -> proto.RetryDetails
	6,  // 6: proto.FunctionDetails.componentType:type_name -> proto.FunctionDetails.ComponentType
	2,  // 7: proto.FunctionDetails.subscriptionPosition:type_name -> proto.SubscriptionPosition
	22, // 8: proto.ConsumerSpec.receiverQueueSize:type_name -> proto.ConsumerSpec.ReceiverQueueSize
	23, // 9: proto.ConsumerSpec.schemaProperties:type_name -> proto.ConsumerSpec.SchemaPropertiesEntry
	24, // 10: proto.ConsumerSpec.consumerProperties:type_name -> proto.ConsumerSpec.ConsumerPropertiesEntry
	13, // 11: proto.ConsumerSpec.cryptoSpec:type_name -> proto.CryptoSpec
	13, // 12: proto.ProducerSpec.cryptoSpec:type_name -> proto.CryptoSpec
	3,  // 13: proto.ProducerSpec.compressionType:type_name -> proto.CompressionType
	14, // 14: proto.ProducerSpec.batchingSpec:type_name -> proto.BatchingSpec
	7,  // 15: proto.CryptoSpec.producerCryptoFailureAction:type_name -> proto.CryptoSpec.FailureAction
	7,  // 16: proto.CryptoSpec.consumerCryptoFailureAction:type_name -> proto.CryptoSpec.FailureAction
	1,  // 17: proto.SourceSpec.subscriptionType:type_name -> proto.SubscriptionType
	25, // 18: proto.SourceSpec.topicsToSerDeClassName:type_name -> proto.SourceSpec.TopicsToSerDeClassNameEntry
	26, // 19: proto.SourceSpec.inputSpecs:type_name -> proto.SourceSpec.InputSpecsEntry
	2,  // 20: proto.SourceSpec.subscriptionPosition:type_name -> proto.SubscriptionPosition
	12, // 21: proto.SinkSpec.producerSpec:type_name -> proto.ProducerSpec
	27, // 22: proto.SinkSpec.schemaProperties:type_name -> proto.SinkSpec.SchemaPropertiesEntry
	28, // 23: proto.SinkSpec.consumerProperties:type_name -> proto.SinkSpec.ConsumerPropertiesEntry
	10, // 24: proto.FunctionMetaData.functionDetails:type_name -> proto.FunctionDetails
	17, // 25: proto.FunctionMetaData.packageLocation:type_name -> proto.PackageLocationMetaData
	29, // 26: proto.FunctionMetaData.instanceStates:type_name -> proto.FunctionMetaData.InstanceStatesEntry
	19, // 27: proto.FunctionMetaData.functionAuthSpec:type_name -> proto.FunctionAuthenticationSpec
	17, // 28: proto.FunctionMetaData.transformFunctionPackageLocation:type_name -> proto.PackageLocationMetaData
	18, // 29: proto.Instance.functionMetaData:type_name -> proto.FunctionMetaData
	20, // 30: proto.Assignment.instance:type_name -> proto.Instance
	11, // 31: proto.SourceSpec.InputSpecsEntry.value:type_name -> proto.ConsumerSpec
	4,  // 32: proto.FunctionMetaData.InstanceStatesEntry.value:type_name -> proto.FunctionState
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_Function_proto_init() }
func file_Function_proto_init() {
	if File_Function_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_Function_proto_rawDesc), len(file_Function_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Function_proto_goTypes,
		DependencyIndexes: file_Function_proto_depIdxs,
		EnumInfos:         file_Function_proto_enumTypes,
		MessageInfos:      file_Function_proto_msgTypes,
	}.Build()
	File_Function_proto = out.File
	file_Function_proto_goTypes = nil
	file_Function_proto_depIdxs = nil
}
