name: Precommit - Integration Tests - Mesh Worker Service
on:
  pull_request:
    branches:
      - '*'
jobs:

  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm

      - name: clean disk
        if: ${{ steps.check_changes.outputs.docs_only != 'true' }}
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.6.0/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          yq --help

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: tuteng
          password: ${{ secrets.IMAGE_GITHUB_TOKEN }}

      - name: Auto generate crd model
        run: cd mesh-worker-service && ./tool/generate-crd.sh

      - name: Format license
        run: cd mesh-worker-service && mvn license:format

      - name: Build mesh-worker-service
        run: cd mesh-worker-service && mvn clean install -DskipTests

      - name: Build pulsar image with mesh-worker-service
        run: cd mesh-worker-service && docker build --tag mesh-worker-service-integration-pulsar:latest -f integration-tests/docker/Dockerfile ./

      - name: Deploy k8s cluster env
        uses: nick-invision/retry@v2
        with:
          timeout_minutes: 60
          max_attempts: 3
          retry_on: error
          command: |
            .ci/deploy_pulsar_cluster.sh .ci/clusters/values_mesh_worker_service.yaml
          on_retry_command: |
            .ci/cleanup.sh

      - name: Install operator-sdk
        run: |
          RELEASE_VERSION=v1.2.0
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu

      - name: Deploy function mesh server
        run: |
          make generate
          make install
          nohup make run &

      - name: Build runner images
        run: |
          PULSAR_IMAGE_TAG=2.9.0.0-rc-4 PULSAR_IMAGE=streamnative/pulsar-all KIND_PUSH=true images/build.sh

      - name: verify mesh-worker-service
        run: |
          .ci/verify_mesh_worker_service.sh

      - name: verify package management service
        run: |
          .ci/verify_package_management_service.sh

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure()

