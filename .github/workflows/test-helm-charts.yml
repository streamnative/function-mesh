#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

name: Precommit - Helm Chart (Basic Installation)
on:
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'PROJECT'
      - 'LICENSE'
      - 'mesh-worker-service/README.md'
      - 'tools/README.md'
jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: clean disk
        run: |
          sudo swapoff -a
          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo apt clean
          docker rmi $(docker images -q) -f
          df -h

      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .ci/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config .ci/ct.yaml
        if: steps.list-changed.outputs.changed == 'true'

      - name: Create kind cluster
        run: hack/kind-cluster-build.sh --name chart-testing -c 1 -v 10 --k8sVersion v1.23.17
        if: steps.list-changed.outputs.changed == 'true'

      - name: Set up GO 1.22.2
        if: steps.list-changed.outputs.changed == 'true'
        uses: actions/setup-go@v1
        with:
          go-version: 1.22.2
        id: go

      - name: setup kubebuilder 3.6.0
        if: steps.list-changed.outputs.changed == 'true'
        uses: RyanSiu1995/kubebuilder-action@v1.2.1
        with:
          version: 3.6.0

      - name: Install operator-sdk
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          RELEASE_VERSION=v1.14.0
          curl -LO "https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk_linux_amd64"
          chmod +x operator-sdk_linux_amd64 && sudo mkdir -p /usr/local/bin/ && sudo mv operator-sdk_linux_amd64 /usr/local/bin/operator-sdk

      - name: Get vertical-pod-autoscaler crd
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          wget https://raw.githubusercontent.com/kubernetes/autoscaler/master/vertical-pod-autoscaler/deploy/vpa-v1-crd-gen.yaml -O config/crd/bases/vpa-v1-crd.yaml
          helm repo add cowboysysop https://cowboysysop.github.io/charts/
          helm repo update

      - name: Build and load image into kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          IMG=$(make operator-docker-image-name)
          make operator-docker-image
          kind load docker-image ${IMG} --name chart-testing

      - name: Setup cert-manager
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
          helm install cert-manager jetstack/cert-manager --set installCRDs=true --version v1.8.2

      - name: Run chart-testing (install)
        run: ct install --config .ci/ct.yaml
        if: steps.list-changed.outputs.changed == 'true'

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: failure()
