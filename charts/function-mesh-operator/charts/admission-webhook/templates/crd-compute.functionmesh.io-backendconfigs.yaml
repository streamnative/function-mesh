{{- if .Values.admissionWebhook.enabled }}
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    {{- if eq .Values.admissionWebhook.certificate.provider "cert-manager" }}
      {{- include "function-mesh-operator.certManager.annotation" . | nindent 4 -}}
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.9.2
  name: backendconfigs.compute.functionmesh.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        {{- if eq .Values.admissionWebhook.certificate.provider "custom" }}
          {{- $caSecret := (lookup "v1" "Secret" .Values.admissionWebhook.secretsWebhookNamespace (include "function-mesh-operator.certificate.caSecret" .)) -}}
          {{- if $caSecret }}
            {{- $caCert := (b64dec (get $caSecret.data "tls.crt")) -}}
            {{ printf (include "function-mesh-operator.caBundle" .) (b64enc $caCert) | nindent 8 }}
          {{- end }}
        {{- end }}
        service:
          name: {{ include "function-mesh-operator.webhook.service" . }}
          namespace: {{ .Release.Namespace }}
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1
        - v1beta1
  group: compute.functionmesh.io
  names:
    kind: BackendConfig
    listKind: BackendConfigList
    plural: backendconfigs
    singular: backendconfig
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              properties:
                env:
                  additionalProperties:
                    type: string
                  type: object
                name:
                  type: string
              type: object
            status:
              type: object
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
{{- end }}
