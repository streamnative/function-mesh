apiVersion: apps/v1
kind: Deployment
metadata:
  name: function-mesh-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "function-mesh-operator.name" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: controller-manager
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+"  "_" }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "function-mesh-operator.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "function-mesh-operator.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: controller-manager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.controllerManager.metrics.port }}"
    spec:
    {{- if .Values.controllerManager.serviceAccount }}
      serviceAccount: {{ .Values.controllerManager.serviceAccount }}
    {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 6 }}
    {{- end }}
      containers:
      - name: function-mesh-operator
        image: {{ .Values.operatorImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
        {{- if .Values.controllerManager.resources }}
        resources:
{{ toYaml .Values.controllerManager.resources | indent 12 }}
        {{- end }}
        ports:
        {{- if .Values.admissionWebhook.enabled }}
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        {{- end}}
        - containerPort: {{ .Values.controllerManager.metrics.port }}
          name: http-metrics
          protocol: TCP
        command:
          - /manager
        args:
          - --enable-leader-election={{ .Values.controllerManager.enableLeaderElection }}
          - --enable-pprof={{ .Values.controllerManager.pprof.enable }}
          - --metrics-addr=:{{ .Values.controllerManager.metrics.port }}
          - --health-probe-addr=:{{ .Values.controllerManager.healthProbe.port }}
          - --pprof-addr=:{{ .Values.controllerManager.pprof.port }}
          - --config-file={{ .Values.controllerManager.configFile }}
          - --enable-init-containers={{ .Values.controllerManager.enableInitContainers }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ENABLE_WEBHOOKS
            value: {{ .Values.admissionWebhook.enabled | quote }}
        volumeMounts:
        {{- include "function-mesh-operator.volumeMounts" . | nindent 8 }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.controllerManager.healthProbe.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.controllerManager.healthProbe.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
      {{- with .Values.controllerManager.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.controllerManager.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.controllerManager.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.controllerManager.priorityClassName }}
      priorityClassName: {{ .Values.controllerManager.priorityClassName }}
      {{- end }}
      volumes:
      {{- include "function-mesh-operator.volumes" . | nindent 6 -}}
---
apiVersion: v1
kind: Service
metadata:
  name: function-mesh-controller-manager-metrics-service
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "function-mesh-operator.labels" . | nindent 4 }}
spec:
  ports:
    - name: http-metrics
      port: {{ .Values.controllerManager.metrics.port }}
      protocol: TCP
      targetPort: {{ .Values.controllerManager.metrics.port }}
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: controller-manager