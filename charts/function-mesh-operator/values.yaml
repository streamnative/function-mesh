# Default values for function-mesh-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Also see clusterScoped and controllerManager.serviceAccount
rbac:
  create: true

# values for Function Mesh installation
installation:
  namespace: function-mesh-system

# operatorImage is Function Mesh Operator image
operatorImage: streamnative/function-mesh:v0.20.1-rc-3
imagePullPolicy: IfNotPresent
imagePullSecrets: []

controllerManager:
  create: true
  # With rbac.create=false, the user is responsible for creating this account
  # With rbac.create=true, this service account will be created
  # Also see rbac.create and clusterScoped
  serviceAccount: function-mesh-controller-manager
  replicas: 1
  resources:
    requests:
      cpu: 80m
      memory: 50Mi
  #  # REF: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  #  priorityClassName: system-cluster-critical

  # autoFailover is whether function-mesh-operator should auto failover when failure occurs
  autoFailover: true
  ## affinity defines pod scheduling rules,affinity default settings is empty.
  ## please read the affinity document before set your scheduling rule:
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## nodeSelector ensure pods only assigning to nodes which have each of the indicated key-value pairs as labels
  ## ref:https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}
  ## Tolerations are applied to pods, and allow pods to schedule onto nodes with matching taints.
  ## refer to https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
  tolerations: []
  # - key: node-role
  #   operator: Equal
  #   value: function-mesh-operator
  #   effect: "NoSchedule"
  ## Selector (label query) to filter on, make sure that this controller manager only manages the custom resources that match the labels
  ## refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#equality-based-requirement
  selector: []
  # - k1==v1
  # - k2!=v2
  # default runner images for different language runtime
  # runnerImages:
  #  java: streamnative/pulsar-functions-java-runner:2.10.0.0-rc10
  #  python: streamnative/pulsar-functions-python-runner:2.10.0.0-rc10
  #  go: streamnative/pulsar-functions-go-runner:2.10.0.0-rc10
  # resource labels applied to each function/connector managed by this controller
  # resourceLabels: {}
  # resource annotations applied to each function/connector managed by this controller
  # resourceAnnotations: {}

  configFile: /etc/config/config.yaml
  enableLeaderElection: true
  metrics:
    port: 8080
  healthProbe:
    port: 8000
  pprof:
    enable: false
    port: 8090
  enableInitContainers: false

admissionWebhook:
  enabled: true
